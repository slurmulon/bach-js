{"version":3,"file":"bach-js.umd.js","sources":["../node_modules/notecoord/index.js","../node_modules/accidental-value/index.js","../node_modules/scientific-notation/index.js","../node_modules/helmholtz/index.js","../node_modules/pitch-fq/index.js","../node_modules/teoria/lib/knowledge.js","../node_modules/teoria/lib/vector.js","../node_modules/interval-coords/index.js","../node_modules/teoria/lib/interval.js","../node_modules/teoria/lib/note.js","../node_modules/daccord/index.js","../node_modules/teoria/lib/chord.js","../node_modules/teoria/lib/scale.js","../node_modules/teoria/lib/sugar.js","../node_modules/teoria/index.js","../src/data.js","../src/note.js","../src/math.js","../src/durations.js","../src/elements.js","../src/beats.js","../src/music.js"],"sourcesContent":["// First coord is octaves, second is fifths. Distances are relative to c\nvar notes = {\n  c: [0, 0],\n  d: [-1, 2],\n  e: [-2, 4],\n  f: [1, -1],\n  g: [0, 1],\n  a: [-1, 3],\n  b: [-2, 5],\n  h: [-2, 5]\n};\n\nmodule.exports = function(name) {\n  return name in notes ? [notes[name][0], notes[name][1]] : null;\n};\n\nmodule.exports.notes = notes;\nmodule.exports.A4 = [3, 3]; // Relative to C0 (scientic notation, ~16.35Hz)\nmodule.exports.sharp = [-4, 7];\n","var accidentalValues = {\n  'bb': -2,\n  'b': -1,\n  '': 0,\n  '#': 1,\n  'x': 2\n};\n\nmodule.exports = function accidentalNumber(acc) {\n  return accidentalValues[acc];\n}\n\nmodule.exports.interval = function accidentalInterval(acc) {\n  var val = accidentalValues[acc];\n  return [-4 * val, 7 * val];\n}\n","var coords = require('notecoord');\nvar accval = require('accidental-value');\n\nmodule.exports = function scientific(name) {\n  var format = /^([a-h])(x|#|bb|b?)(-?\\d*)/i;\n\n  var parser = name.match(format);\n  if (!(parser && name === parser[0] && parser[3].length)) return;\n\n  var noteName = parser[1];\n  var octave = +parser[3];\n  var accidental = parser[2].length ? parser[2].toLowerCase() : '';\n\n  var accidentalValue = accval.interval(accidental);\n  var coord = coords(noteName.toLowerCase());\n\n  coord[0] += octave;\n  coord[0] += accidentalValue[0] - coords.A4[0];\n  coord[1] += accidentalValue[1] - coords.A4[1];\n\n  return coord;\n};\n","var coords = require('notecoord');\nvar accval = require('accidental-value');\n\nmodule.exports = function helmholtz(name) {\n  var name = name.replace(/\\u2032/g, \"'\").replace(/\\u0375/g, ',');\n  var parts = name.match(/^(,*)([a-h])(x|#|bb|b?)([,\\']*)$/i);\n\n  if (!parts || name !== parts[0])\n    throw new Error('Invalid formatting');\n\n  var note = parts[2];\n  var octaveFirst = parts[1];\n  var octaveLast = parts[4];\n  var lower = note === note.toLowerCase();\n  var octave;\n\n  if (octaveFirst) {\n    if (lower)\n      throw new Error('Invalid formatting - found commas before lowercase note');\n\n    octave = 2 - octaveFirst.length;\n  } else if (octaveLast) {\n    if (octaveLast.match(/^'+$/) && lower)\n      octave = 3 + octaveLast.length;\n    else if (octaveLast.match(/^,+$/) && !lower)\n      octave = 2 - octaveLast.length;\n    else\n      throw new Error('Invalid formatting - mismatch between octave ' +\n        'indicator and letter case')\n  } else\n    octave = lower ? 3 : 2;\n\n  var accidentalValue = accval.interval(parts[3].toLowerCase());\n  var coord = coords(note.toLowerCase());\n\n  coord[0] += octave;\n  coord[0] += accidentalValue[0] - coords.A4[0];\n  coord[1] += accidentalValue[1] - coords.A4[1];\n\n  return coord;\n};\n","module.exports = function(coord, stdPitch) {\n  if (typeof coord === 'number') {\n    stdPitch = coord;\n    return function(coord) {\n      return stdPitch * Math.pow(2, (coord[0] * 12 + coord[1] * 7) / 12);\n    }\n  }\n\n  stdPitch = stdPitch || 440;\n  return stdPitch * Math.pow(2, (coord[0] * 12 + coord[1] * 7) / 12);\n}\n","// Note coordinates [octave, fifth] relative to C\nmodule.exports = {\n  notes: {\n    c: [0, 0],\n    d: [-1, 2],\n    e: [-2, 4],\n    f: [1, -1],\n    g: [0, 1],\n    a: [-1, 3],\n    b: [-2, 5],\n    h: [-2, 5]\n  },\n\n  intervals: {\n    unison: [0, 0],\n    second: [3, -5],\n    third: [2, -3],\n    fourth: [1, -1],\n    fifth: [0, 1],\n    sixth: [3, -4],\n    seventh: [2, -2],\n    octave: [1, 0]\n  },\n\n  intervalFromFifth: ['second', 'sixth', 'third', 'seventh', 'fourth',\n                         'unison', 'fifth'],\n\n  intervalsIndex: ['unison', 'second', 'third', 'fourth', 'fifth',\n                      'sixth', 'seventh', 'octave', 'ninth', 'tenth',\n                      'eleventh', 'twelfth', 'thirteenth', 'fourteenth',\n                      'fifteenth'],\n\n// linear index to fifth = (2 * index + 1) % 7\n  fifths: ['f', 'c', 'g', 'd', 'a', 'e', 'b'],\n  accidentals: ['bb', 'b', '', '#', 'x'],\n\n  sharp: [-4, 7],\n  A4: [3, 3],\n\n  durations: {\n    '0.25': 'longa',\n    '0.5': 'breve',\n    '1': 'whole',\n    '2': 'half',\n    '4': 'quarter',\n    '8': 'eighth',\n    '16': 'sixteenth',\n    '32': 'thirty-second',\n    '64': 'sixty-fourth',\n    '128': 'hundred-twenty-eighth'\n  },\n\n  qualityLong: {\n    P: 'perfect',\n    M: 'major',\n    m: 'minor',\n    A: 'augmented',\n    AA: 'doubly augmented',\n    d: 'diminished',\n    dd: 'doubly diminished'\n  },\n\n  alterations: {\n    perfect: ['dd', 'd', 'P', 'A', 'AA'],\n    minor: ['dd', 'd', 'm', 'M', 'A', 'AA']\n  },\n\n  symbols: {\n    'min': ['m3', 'P5'],\n    'm': ['m3', 'P5'],\n    '-': ['m3', 'P5'],\n\n    'M': ['M3', 'P5'],\n    '': ['M3', 'P5'],\n\n    '+': ['M3', 'A5'],\n    'aug': ['M3', 'A5'],\n\n    'dim': ['m3', 'd5'],\n    'o': ['m3', 'd5'],\n\n    'maj': ['M3', 'P5', 'M7'],\n    'dom': ['M3', 'P5', 'm7'],\n    'Ã¸': ['m3', 'd5', 'm7'],\n\n    '5': ['P5']\n  },\n\n  chordShort: {\n    'major': 'M',\n    'minor': 'm',\n    'augmented': 'aug',\n    'diminished': 'dim',\n    'half-diminished': '7b5',\n    'power': '5',\n    'dominant': '7'\n  },\n\n  stepNumber: {\n    'unison': 1,\n    'first': 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'octave': 8,\n    'ninth': 9,\n    'eleventh': 11,\n    'thirteenth': 13\n  },\n\n  // Adjusted Shearer syllables - Chromatic solfege system\n  // Some intervals are not provided for. These include:\n  // dd2 - Doubly diminished second\n  // dd3 - Doubly diminished third\n  // AA3 - Doubly augmented third\n  // dd6 - Doubly diminished sixth\n  // dd7 - Doubly diminished seventh\n  // AA7 - Doubly augmented seventh\n  intervalSolfege: {\n    'dd1': 'daw',\n    'd1': 'de',\n    'P1': 'do',\n    'A1': 'di',\n    'AA1': 'dai',\n    'd2': 'raw',\n    'm2': 'ra',\n    'M2': 're',\n    'A2': 'ri',\n    'AA2': 'rai',\n    'd3': 'maw',\n    'm3': 'me',\n    'M3': 'mi',\n    'A3': 'mai',\n    'dd4': 'faw',\n    'd4': 'fe',\n    'P4': 'fa',\n    'A4': 'fi',\n    'AA4': 'fai',\n    'dd5': 'saw',\n    'd5': 'se',\n    'P5': 'so',\n    'A5': 'si',\n    'AA5': 'sai',\n    'd6': 'law',\n    'm6': 'le',\n    'M6': 'la',\n    'A6': 'li',\n    'AA6': 'lai',\n    'd7': 'taw',\n    'm7': 'te',\n    'M7': 'ti',\n    'A7': 'tai',\n    'dd8': 'daw',\n    'd8': 'de',\n    'P8': 'do',\n    'A8': 'di',\n    'AA8': 'dai'\n  }\n};\n","module.exports = {\n  add: function(note, interval) {\n    return [note[0] + interval[0], note[1] + interval[1]];\n  },\n\n  sub: function(note, interval) {\n    return [note[0] - interval[0], note[1] - interval[1]];\n  },\n\n  mul: function(note, interval) {\n    if (typeof interval === 'number')\n      return [note[0] * interval, note[1] * interval];\n    else\n      return [note[0] * interval[0], note[1] * interval[1]];\n  },\n\n  sum: function(coord) {\n    return coord[0] + coord[1];\n  }\n};\n","var pattern = /^(AA|A|P|M|m|d|dd)(-?\\d+)$/;\n\n// The interval it takes to raise a note a semitone\nvar sharp = [-4, 7];\n\nvar pAlts = ['dd', 'd', 'P', 'A', 'AA'];\nvar mAlts = ['dd', 'd', 'm', 'M', 'A', 'AA'];\n\nvar baseIntervals = [\n  [0, 0],\n  [3, -5],\n  [2, -3],\n  [1, -1],\n  [0, 1],\n  [3, -4],\n  [2, -2],\n  [1, 0]\n];\n\nmodule.exports = function(simple) {\n  var parser = simple.match(pattern);\n  if (!parser) return null;\n\n  var quality = parser[1];\n  var number = +parser[2];\n  var sign = number < 0 ? -1 : 1;\n\n  number = sign < 0 ? -number : number;\n\n  var lower = number > 8 ? (number % 7 || 7) : number;\n  var octaves = (number - lower) / 7;\n\n  var base = baseIntervals[lower - 1];\n  var alts = base[0] <= 1 ? pAlts : mAlts;\n  var alt = alts.indexOf(quality) - 2;\n\n  // this happens, if the alteration wasn't suitable for this type\n  // of interval, such as P2 or M5 (no \"perfect second\" or \"major fifth\")\n  if (alt === -3) return null;\n\n  return [\n    sign * (base[0] + octaves + sharp[0] * alt),\n    sign * (base[1] + sharp[1] * alt)\n  ];\n}\n\n// Copy to avoid overwriting internal base intervals\nmodule.exports.coords = baseIntervals.slice(0);\n","var knowledge = require('./knowledge');\nvar vector = require('./vector');\nvar toCoord = require('interval-coords');\n\nfunction Interval(coord) {\n  if (!(this instanceof Interval)) return new Interval(coord);\n  this.coord = coord;\n}\n\nInterval.prototype = {\n  name: function() {\n    return knowledge.intervalsIndex[this.number() - 1];\n  },\n\n  semitones: function() {\n    return vector.sum(vector.mul(this.coord, [12, 7]));\n  },\n\n  number: function() {\n    return Math.abs(this.value());\n  },\n\n  value: function() {\n    var toMultiply = Math.floor((this.coord[1] - 2) / 7) + 1;\n    var product = vector.mul(knowledge.sharp, toMultiply);\n    var without = vector.sub(this.coord, product);\n    var i = knowledge.intervalFromFifth[without[1] + 5];\n    var diff = without[0] - knowledge.intervals[i][0];\n    var val = knowledge.stepNumber[i] + diff * 7;\n\n    return (val > 0) ? val : val - 2;\n  },\n\n  type: function() {\n    return knowledge.intervals[this.base()][0] <= 1 ? 'perfect' : 'minor';\n  },\n\n  base: function() {\n    var product = vector.mul(knowledge.sharp, this.qualityValue());\n    var fifth = vector.sub(this.coord, product)[1];\n    fifth = this.value() > 0 ? fifth + 5 : -(fifth - 5) % 7;\n    fifth = fifth < 0 ? knowledge.intervalFromFifth.length + fifth : fifth;\n\n    var name = knowledge.intervalFromFifth[fifth];\n    if (name === 'unison' && this.number() >= 8)\n      name = 'octave';\n\n    return name;\n  },\n\n  direction: function(dir) {\n    if (dir) {\n      var is = this.value() >= 1 ? 'up' : 'down';\n      if (is !== dir)\n        this.coord = vector.mul(this.coord, -1);\n\n      return this;\n    }\n    else\n      return this.value() >= 1 ? 'up' : 'down';\n  },\n\n  simple: function(ignore) {\n    // Get the (upwards) base interval (with quality)\n    var simple = knowledge.intervals[this.base()];\n    var toAdd = vector.mul(knowledge.sharp, this.qualityValue());\n    simple = vector.add(simple, toAdd);\n\n    // Turn it around if necessary\n    if (!ignore)\n      simple = this.direction() === 'down' ? vector.mul(simple, -1) : simple;\n\n    return new Interval(simple);\n  },\n\n  isCompound: function() {\n    return this.number() > 8;\n  },\n\n  octaves: function() {\n    var toSubtract, without, octaves;\n\n    if (this.direction() === 'up') {\n      toSubtract = vector.mul(knowledge.sharp, this.qualityValue());\n      without = vector.sub(this.coord, toSubtract);\n      octaves = without[0] - knowledge.intervals[this.base()][0];\n    } else {\n      toSubtract = vector.mul(knowledge.sharp, -this.qualityValue());\n      without = vector.sub(this.coord, toSubtract);\n      octaves = -(without[0] + knowledge.intervals[this.base()][0]);\n    }\n\n    return octaves;\n  },\n\n  invert: function() {\n    var i = this.base();\n    var qual = this.qualityValue();\n    var acc = this.type() === 'minor' ? -(qual - 1) : -qual;\n    var idx = 9 - knowledge.stepNumber[i] - 1;\n    var coord = knowledge.intervals[knowledge.intervalsIndex[idx]];\n    coord = vector.add(coord, vector.mul(knowledge.sharp, acc));\n\n    return new Interval(coord);\n  },\n\n  quality: function(lng) {\n    var quality = knowledge.alterations[this.type()][this.qualityValue() + 2];\n\n    return lng ? knowledge.qualityLong[quality] : quality;\n  },\n\n  qualityValue: function() {\n    if (this.direction() === 'down')\n      return Math.floor((-this.coord[1] - 2) / 7) + 1;\n    else\n      return Math.floor((this.coord[1] - 2) / 7) + 1;\n  },\n\n  equal: function(interval) {\n      return this.coord[0] === interval.coord[0] &&\n          this.coord[1] === interval.coord[1];\n  },\n\n  greater: function(interval) {\n    var semi = this.semitones();\n    var isemi = interval.semitones();\n\n    // If equal in absolute size, measure which interval is bigger\n    // For example P4 is bigger than A3\n    return (semi === isemi) ?\n      (this.number() > interval.number()) : (semi > isemi);\n  },\n\n  smaller: function(interval) {\n    return !this.equal(interval) && !this.greater(interval);\n  },\n\n  add: function(interval) {\n    return new Interval(vector.add(this.coord, interval.coord));\n  },\n\n  toString: function(ignore) {\n    // If given true, return the positive value\n    var number = ignore ? this.number() : this.value();\n\n    return this.quality() + number;\n  }\n};\n\nInterval.toCoord = function(simple) {\n  var coord = toCoord(simple);\n  if (!coord)\n    throw new Error('Invalid simple format interval');\n\n  return new Interval(coord);\n};\n\nInterval.from = function(from, to) {\n  return from.interval(to);\n};\n\nInterval.between = function(from, to) {\n  return new Interval(vector.sub(to.coord, from.coord));\n};\n\nInterval.invert = function(sInterval) {\n  return Interval.toCoord(sInterval).invert().toString();\n};\n\nmodule.exports = Interval;\n","var scientific = require('scientific-notation');\nvar helmholtz = require('helmholtz');\nvar pitchFq = require('pitch-fq');\nvar knowledge = require('./knowledge');\nvar vector = require('./vector');\nvar Interval = require('./interval');\n\nfunction pad(str, ch, len) {\n  for (; len > 0; len--) {\n    str += ch;\n  }\n\n  return str;\n}\n\n\nfunction Note(coord, duration) {\n  if (!(this instanceof Note)) return new Note(coord, duration);\n  duration = duration || {};\n\n  this.duration = { value: duration.value || 4, dots: duration.dots || 0 };\n  this.coord = coord;\n}\n\nNote.prototype = {\n  octave: function() {\n    return this.coord[0] + knowledge.A4[0] - knowledge.notes[this.name()][0] +\n      this.accidentalValue() * 4;\n  },\n\n  name: function() {\n    var value = this.accidentalValue();\n    var idx = this.coord[1] + knowledge.A4[1] - value * 7 + 1;\n    return knowledge.fifths[idx];\n  },\n\n  accidentalValue: function() {\n    return Math.round((this.coord[1] + knowledge.A4[1] - 2) / 7);\n  },\n\n  accidental: function() {\n    return knowledge.accidentals[this.accidentalValue() + 2];\n  },\n\n  /**\n   * Returns the key number of the note\n   */\n  key: function(white) {\n    if (white)\n      return this.coord[0] * 7 + this.coord[1] * 4 + 29;\n    else\n      return this.coord[0] * 12 + this.coord[1] * 7 + 49;\n  },\n\n  /**\n  * Returns a number ranging from 0-127 representing a MIDI note value\n  */\n  midi: function() {\n    return this.key() + 20;\n  },\n\n  /**\n   * Calculates and returns the frequency of the note.\n   * Optional concert pitch (def. 440)\n   */\n  fq: function(concertPitch) {\n    return pitchFq(this.coord, concertPitch);\n  },\n\n  /**\n   * Returns the pitch class index (chroma) of the note\n   */\n  chroma: function() {\n    var value = (vector.sum(vector.mul(this.coord, [12, 7])) - 3) % 12;\n\n    return (value < 0) ? value + 12 : value;\n  },\n\n  interval: function(interval) {\n    if (typeof interval === 'string') interval = Interval.toCoord(interval);\n\n    if (interval instanceof Interval)\n      return new Note(vector.add(this.coord, interval.coord), this.duration);\n    else if (interval instanceof Note)\n      return new Interval(vector.sub(interval.coord, this.coord));\n  },\n\n  transpose: function(interval) {\n    this.coord = vector.add(this.coord, interval.coord);\n    return this;\n  },\n\n  /**\n   * Returns the Helmholtz notation form of the note (fx C,, d' F# g#'')\n   */\n  helmholtz: function() {\n    var octave = this.octave();\n    var name = this.name();\n    name = octave < 3 ? name.toUpperCase() : name.toLowerCase();\n    var padchar = octave < 3 ? ',' : '\\'';\n    var padcount = octave < 2 ? 2 - octave : octave - 3;\n\n    return pad(name + this.accidental(), padchar, padcount);\n  },\n\n  /**\n   * Returns the scientific notation form of the note (fx E4, Bb3, C#7 etc.)\n   */\n  scientific: function() {\n    return this.name().toUpperCase() + this.accidental() + this.octave();\n  },\n\n  /**\n   * Returns notes that are enharmonic with this note.\n   */\n  enharmonics: function(oneaccidental) {\n    var key = this.key(), limit = oneaccidental ? 2 : 3;\n\n    return ['m3', 'm2', 'm-2', 'm-3']\n      .map(this.interval.bind(this))\n      .filter(function(note) {\n      var acc = note.accidentalValue();\n      var diff = key - (note.key() - acc);\n\n      if (diff < limit && diff > -limit) {\n        var product = vector.mul(knowledge.sharp, diff - acc);\n        note.coord = vector.add(note.coord, product);\n        return true;\n      }\n    });\n  },\n\n  solfege: function(scale, showOctaves) {\n    var interval = scale.tonic.interval(this), solfege, stroke, count;\n    if (interval.direction() === 'down')\n      interval = interval.invert();\n\n    if (showOctaves) {\n      count = (this.key(true) - scale.tonic.key(true)) / 7;\n      count = (count >= 0) ? Math.floor(count) : -(Math.ceil(-count));\n      stroke = (count >= 0) ? '\\'' : ',';\n    }\n\n    solfege = knowledge.intervalSolfege[interval.simple(true).toString()];\n    return (showOctaves) ? pad(solfege, stroke, Math.abs(count)) : solfege;\n  },\n\n  scaleDegree: function(scale) {\n    var inter = scale.tonic.interval(this);\n\n    // If the direction is down, or we're dealing with an octave - invert it\n    if (inter.direction() === 'down' ||\n       (inter.coord[1] === 0 && inter.coord[0] !== 0)) {\n      inter = inter.invert();\n    }\n\n    inter = inter.simple(true).coord;\n\n    return scale.scale.reduce(function(index, current, i) {\n      var coord = Interval.toCoord(current).coord;\n      return coord[0] === inter[0] && coord[1] === inter[1] ? i + 1 : index;\n    }, 0);\n  },\n\n  /**\n   * Returns the name of the duration value,\n   * such as 'whole', 'quarter', 'sixteenth' etc.\n   */\n  durationName: function() {\n    return knowledge.durations[this.duration.value];\n  },\n\n  /**\n   * Returns the duration of the note (including dots)\n   * in seconds. The first argument is the tempo in beats\n   * per minute, the second is the beat unit (i.e. the\n   * lower numeral in a time signature).\n   */\n  durationInSeconds: function(bpm, beatUnit) {\n    var secs = (60 / bpm) / (this.duration.value / 4) / (beatUnit / 4);\n    return secs * 2 - secs / Math.pow(2, this.duration.dots);\n  },\n\n  /**\n   * Returns the name of the note, with an optional display of octave number\n   */\n  toString: function(dont) {\n    return this.name() + this.accidental() + (dont ? '' : this.octave());\n  }\n};\n\nNote.fromString = function(name, dur) {\n  var coord = scientific(name);\n  if (!coord) coord = helmholtz(name);\n  return new Note(coord, dur);\n};\n\nNote.fromKey = function(key) {\n  var octave = Math.floor((key - 4) / 12);\n  var distance = key - (octave * 12) - 4;\n  var name = knowledge.fifths[(2 * Math.round(distance / 2) + 1) % 7];\n  var subDiff = vector.sub(knowledge.notes[name], knowledge.A4);\n  var note = vector.add(subDiff, [octave + 1, 0]);\n  var diff = (key - 49) - vector.sum(vector.mul(note, [12, 7]));\n\n  var arg = diff ? vector.add(note, vector.mul(knowledge.sharp, diff)) : note;\n  return new Note(arg);\n};\n\nNote.fromFrequency = function(fq, concertPitch) {\n  var key, cents, originalFq;\n  concertPitch = concertPitch || 440;\n\n  key = 49 + 12 * ((Math.log(fq) - Math.log(concertPitch)) / Math.log(2));\n  key = Math.round(key);\n  originalFq = concertPitch * Math.pow(2, (key - 49) / 12);\n  cents = 1200 * (Math.log(fq / originalFq) / Math.log(2));\n\n  return { note: Note.fromKey(key), cents: cents };\n};\n\nNote.fromMIDI = function(note) {\n  return Note.fromKey(note - 20);\n};\n\nmodule.exports = Note;\n","var SYMBOLS = {\n  'm': ['m3', 'P5'],\n  'mi': ['m3', 'P5'],\n  'min': ['m3', 'P5'],\n  '-': ['m3', 'P5'],\n\n  'M': ['M3', 'P5'],\n  'ma': ['M3', 'P5'],\n  '': ['M3', 'P5'],\n\n  '+': ['M3', 'A5'],\n  'aug': ['M3', 'A5'],\n\n  'dim': ['m3', 'd5'],\n  'o': ['m3', 'd5'],\n\n  'maj': ['M3', 'P5', 'M7'],\n  'dom': ['M3', 'P5', 'm7'],\n  'Ã¸': ['m3', 'd5', 'm7'],\n\n  '5': ['P5'],\n\n  '6/9': ['M3', 'P5', 'M6', 'M9']\n};\n\nmodule.exports = function(symbol) {\n  var c, parsing = 'quality', additionals = [], name, chordLength = 2\n  var notes = ['P1', 'M3', 'P5', 'm7', 'M9', 'P11', 'M13'];\n  var explicitMajor = false;\n\n  function setChord(name) {\n    var intervals = SYMBOLS[name];\n    for (var i = 0, len = intervals.length; i < len; i++) {\n      notes[i + 1] = intervals[i];\n    }\n\n    chordLength = intervals.length;\n  }\n\n  // Remove whitespace, commas and parentheses\n  symbol = symbol.replace(/[,\\s\\(\\)]/g, '');\n  for (var i = 0, len = symbol.length; i < len; i++) {\n    if (!(c = symbol[i]))\n      return;\n\n    if (parsing === 'quality') {\n      var sub3 = (i + 2) < len ? symbol.substr(i, 3).toLowerCase() : null;\n      var sub2 = (i + 1) < len ? symbol.substr(i, 2).toLowerCase() : null;\n      if (sub3 in SYMBOLS)\n        name = sub3;\n      else if (sub2 in SYMBOLS)\n        name = sub2;\n      else if (c in SYMBOLS)\n        name = c;\n      else\n        name = '';\n\n      if (name)\n        setChord(name);\n\n      if (name === 'M' || name === 'ma' || name === 'maj')\n        explicitMajor = true;\n\n\n      i += name.length - 1;\n      parsing = 'extension';\n    } else if (parsing === 'extension') {\n      c = (c === '1' && symbol[i + 1]) ? +symbol.substr(i, 2) : +c;\n\n      if (!isNaN(c) && c !== 6) {\n        chordLength = (c - 1) / 2;\n\n        if (chordLength !== Math.round(chordLength))\n          return new Error('Invalid interval extension: ' + c.toString(10));\n\n        if (name === 'o' || name === 'dim')\n          notes[3] = 'd7';\n        else if (explicitMajor)\n          notes[3] = 'M7';\n\n        i += c >= 10 ? 1 : 0;\n      } else if (c === 6) {\n        notes[3] = 'M6';\n        chordLength = Math.max(3, chordLength);\n      } else\n        i -= 1;\n\n      parsing = 'alterations';\n    } else if (parsing === 'alterations') {\n      var alterations = symbol.substr(i).split(/(#|b|add|maj|sus|M)/i),\n          next, flat = false, sharp = false;\n\n      if (alterations.length === 1)\n        return new Error('Invalid alteration');\n      else if (alterations[0].length !== 0)\n        return new Error('Invalid token: \\'' + alterations[0] + '\\'');\n\n      var ignore = false;\n      alterations.forEach(function(alt, i, arr) {\n        if (ignore || !alt.length)\n          return ignore = false;\n\n        var next = arr[i + 1], lower = alt.toLowerCase();\n        if (alt === 'M' || lower === 'maj') {\n          if (next === '7')\n            ignore = true;\n\n          chordLength = Math.max(3, chordLength);\n          notes[3] = 'M7';\n        } else if (lower === 'sus') {\n          var type = 'P4';\n          if (next === '2' || next === '4') {\n            ignore = true;\n\n            if (next === '2')\n              type = 'M2';\n          }\n\n          notes[1] = type; // Replace third with M2 or P4\n        } else if (lower === 'add') {\n          if (next === '9')\n            additionals.push('M9');\n          else if (next === '11')\n            additionals.push('P11');\n          else if (next === '13')\n            additionals.push('M13');\n\n          ignore = true\n        } else if (lower === 'b') {\n          flat = true;\n        } else if (lower === '#') {\n          sharp = true;\n        } else {\n          var token = +alt, quality, intPos;\n          if (isNaN(token) || String(token).length !== alt.length)\n            return new Error('Invalid token: \\'' + alt + '\\'');\n\n          if (token === 6) {\n            if (sharp)\n              notes[3] = 'A6';\n            else if (flat)\n              notes[3] = 'm6';\n            else\n              notes[3] = 'M6';\n\n            chordLength = Math.max(3, chordLength);\n            return;\n          }\n\n          // Calculate the position in the 'note' array\n          intPos = (token - 1) / 2;\n          if (chordLength < intPos)\n            chordLength = intPos;\n\n          if (token < 5 || token === 7 || intPos !== Math.round(intPos))\n            return new Error('Invalid interval alteration: ' + token);\n\n          quality = notes[intPos][0];\n\n          // Alterate the quality of the interval according the accidentals\n          if (sharp) {\n            if (quality === 'd')\n              quality = 'm';\n            else if (quality === 'm')\n              quality = 'M';\n            else if (quality === 'M' || quality === 'P')\n              quality = 'A';\n          } else if (flat) {\n            if (quality === 'A')\n              quality = 'M';\n            else if (quality === 'M')\n              quality = 'm';\n            else if (quality === 'm' || quality === 'P')\n              quality = 'd';\n          }\n\n          sharp = flat = false;\n          notes[intPos] = quality + token;\n        }\n      });\n      parsing = 'ended';\n    } else if (parsing === 'ended') {\n      break;\n    }\n  }\n\n  return notes.slice(0, chordLength + 1).concat(additionals);\n}\n","var daccord = require('daccord');\nvar knowledge = require('./knowledge');\nvar Note = require('./note');\nvar Interval = require('./interval');\n\nfunction Chord(root, name) {\n  if (!(this instanceof Chord)) return new Chord(root, name);\n  name = name || '';\n  this.name = root.name().toUpperCase() + root.accidental() + name;\n  this.symbol = name;\n  this.root = root;\n  this.intervals = [];\n  this._voicing = [];\n\n  var bass = name.split('/');\n  if (bass.length === 2 && bass[1].trim() !== '9') {\n    name = bass[0];\n    bass = bass[1].trim();\n  } else {\n    bass = null;\n  }\n\n  this.intervals = daccord(name).map(Interval.toCoord);\n  this._voicing = this.intervals.slice();\n\n  if (bass) {\n    var intervals = this.intervals, bassInterval, note;\n    // Make sure the bass is atop of the root note\n    note = Note.fromString(bass + (root.octave() + 1)); // crude\n\n    bassInterval = Interval.between(root, note);\n    bass = bassInterval.simple();\n    bassInterval = bassInterval.invert().direction('down');\n\n    this._voicing = [bassInterval];\n    for (var i = 0, length = intervals.length;  i < length; i++) {\n      if (!intervals[i].simple().equal(bass))\n        this._voicing.push(intervals[i]);\n    }\n  }\n}\n\nChord.prototype = {\n  notes: function() {\n    var root = this.root;\n    return this.voicing().map(function(interval) {\n      return root.interval(interval);\n    });\n  },\n\n  simple: function() {\n    return this.notes().map(function(n) { return n.toString(true); });\n  },\n\n  bass: function() {\n    return this.root.interval(this._voicing[0]);\n  },\n\n  voicing: function(voicing) {\n    // Get the voicing\n    if (!voicing) {\n      return this._voicing;\n    }\n\n    // Set the voicing\n    this._voicing = [];\n    for (var i = 0, length = voicing.length; i < length; i++) {\n      this._voicing[i] = Interval.toCoord(voicing[i]);\n    }\n\n    return this;\n  },\n\n  resetVoicing: function() {\n    this._voicing = this.intervals;\n  },\n\n  dominant: function(additional) {\n    additional = additional || '';\n    return new Chord(this.root.interval('P5'), additional);\n  },\n\n  subdominant: function(additional) {\n    additional = additional || '';\n    return new Chord(this.root.interval('P4'), additional);\n  },\n\n  parallel: function(additional) {\n    additional = additional || '';\n    var quality = this.quality();\n\n    if (this.chordType() !== 'triad' || quality === 'diminished' ||\n        quality === 'augmented') {\n      throw new Error('Only major/minor triads have parallel chords');\n    }\n\n    if (quality === 'major') {\n      return new Chord(this.root.interval('m3', 'down'), 'm');\n    } else {\n      return new Chord(this.root.interval('m3', 'up'));\n    }\n  },\n\n  quality: function() {\n    var third, fifth, seventh, intervals = this.intervals;\n\n    for (var i = 0, length = intervals.length; i < length; i++) {\n      if (intervals[i].number() === 3) {\n        third = intervals[i];\n      } else if (intervals[i].number() === 5) {\n        fifth = intervals[i];\n      } else if (intervals[i].number() === 7) {\n        seventh = intervals[i];\n      }\n    }\n\n    if (!third) {\n      return;\n    }\n\n    third = (third.direction() === 'down') ? third.invert() : third;\n    third = third.simple().toString();\n\n    if (fifth) {\n      fifth = (fifth.direction === 'down') ? fifth.invert() : fifth;\n      fifth = fifth.simple().toString();\n    }\n\n    if (seventh) {\n      seventh = (seventh.direction === 'down') ? seventh.invert() : seventh;\n      seventh = seventh.simple().toString();\n    }\n\n    if (third === 'M3') {\n      if (fifth === 'A5') {\n        return 'augmented';\n      } else if (fifth === 'P5') {\n        return (seventh === 'm7') ? 'dominant' : 'major';\n      }\n\n      return 'major';\n    } else if (third === 'm3') {\n      if (fifth === 'P5') {\n        return 'minor';\n      } else if (fifth === 'd5') {\n        return (seventh === 'm7') ? 'half-diminished' : 'diminished';\n      }\n\n      return 'minor';\n    }\n  },\n\n  chordType: function() { // In need of better name\n    var length = this.intervals.length, interval, has, invert, i, name;\n\n    if (length === 2) {\n      return 'dyad';\n    } else if (length === 3) {\n      has = {unison: false, third: false, fifth: false};\n      for (i = 0; i < length; i++) {\n        interval = this.intervals[i];\n        invert = interval.invert();\n        if (interval.base() in has) {\n          has[interval.base()] = true;\n        } else if (invert.base() in has) {\n          has[invert.base()] = true;\n        }\n      }\n\n      name = (has.unison && has.third && has.fifth) ? 'triad' : 'trichord';\n    } else if (length === 4) {\n      has = {unison: false, third: false, fifth: false, seventh: false};\n      for (i = 0; i < length; i++) {\n        interval = this.intervals[i];\n        invert = interval.invert();\n        if (interval.base() in has) {\n          has[interval.base()] = true;\n        } else if (invert.base() in has) {\n          has[invert.base()] = true;\n        }\n      }\n\n      if (has.unison && has.third && has.fifth && has.seventh) {\n        name = 'tetrad';\n      }\n    }\n\n    return name || 'unknown';\n  },\n\n  get: function(interval) {\n    if (typeof interval === 'string' && interval in knowledge.stepNumber) {\n      var intervals = this.intervals, i, length;\n\n      interval = knowledge.stepNumber[interval];\n      for (i = 0, length = intervals.length; i < length; i++) {\n        if (intervals[i].number() === interval) {\n          return this.root.interval(intervals[i]);\n        }\n      }\n\n      return null;\n    } else {\n      throw new Error('Invalid interval name');\n    }\n  },\n\n  interval: function(interval) {\n    return new Chord(this.root.interval(interval), this.symbol);\n  },\n\n  transpose: function(interval) {\n    this.root.transpose(interval);\n    this.name = this.root.name().toUpperCase() +\n                this.root.accidental() + this.symbol;\n\n    return this;\n  },\n\n  toString: function() {\n    return this.name;\n  }\n};\n\nmodule.exports = Chord;\n","var knowledge = require('./knowledge');\nvar Interval = require('./interval');\n\nvar scales = {\n  aeolian: ['P1', 'M2', 'm3', 'P4', 'P5', 'm6', 'm7'],\n  blues: ['P1', 'm3', 'P4', 'd5', 'P5', 'm7'],\n  chromatic: ['P1', 'm2', 'M2', 'm3', 'M3', 'P4',\n    'A4', 'P5', 'm6', 'M6', 'm7', 'M7'],\n  dorian: ['P1', 'M2', 'm3', 'P4', 'P5', 'M6', 'm7'],\n  doubleharmonic: ['P1', 'm2', 'M3', 'P4', 'P5', 'm6', 'M7'],\n  harmonicminor: ['P1', 'M2', 'm3', 'P4', 'P5', 'm6', 'M7'],\n  ionian: ['P1', 'M2', 'M3', 'P4', 'P5', 'M6', 'M7'],\n  locrian: ['P1', 'm2', 'm3', 'P4', 'd5', 'm6', 'm7'],\n  lydian: ['P1', 'M2', 'M3', 'A4', 'P5', 'M6', 'M7'],\n  majorpentatonic: ['P1', 'M2', 'M3', 'P5', 'M6'],\n  melodicminor: ['P1', 'M2', 'm3', 'P4', 'P5', 'M6', 'M7'],\n  minorpentatonic: ['P1', 'm3', 'P4', 'P5', 'm7'],\n  mixolydian: ['P1', 'M2', 'M3', 'P4', 'P5', 'M6', 'm7'],\n  phrygian: ['P1', 'm2', 'm3', 'P4', 'P5', 'm6', 'm7'],\n  wholetone: ['P1', 'M2', 'M3', 'A4', 'A5', 'A6']\n};\n\n// synonyms\nscales.harmonicchromatic = scales.chromatic;\nscales.minor = scales.aeolian;\nscales.major = scales.ionian;\nscales.flamenco = scales.doubleharmonic;\n\nfunction Scale(tonic, scale) {\n  if (!(this instanceof Scale)) return new Scale(tonic, scale);\n  var scaleName, i;\n  if (!('coord' in tonic)) {\n    throw new Error('Invalid Tonic');\n  }\n\n  if (typeof scale === 'string') {\n    scaleName = scale;\n    scale = scales[scale];\n    if (!scale)\n      throw new Error('Invalid Scale');\n  } else {\n    for (i in scales) {\n      if (scales.hasOwnProperty(i)) {\n        if (scales[i].toString() === scale.toString()) {\n          scaleName = i;\n          break;\n        }\n      }\n    }\n  }\n\n  this.name = scaleName;\n  this.tonic = tonic;\n  this.scale = scale;\n}\n\nScale.prototype = {\n  notes: function() {\n    var notes = [];\n\n    for (var i = 0, length = this.scale.length; i < length; i++) {\n      notes.push(this.tonic.interval(this.scale[i]));\n    }\n\n    return notes;\n  },\n\n  simple: function() {\n    return this.notes().map(function(n) { return n.toString(true); });\n  },\n\n  type: function() {\n    var length = this.scale.length - 2;\n    if (length < 8) {\n      return ['di', 'tri', 'tetra', 'penta', 'hexa', 'hepta', 'octa'][length] +\n        'tonic';\n    }\n  },\n\n  get: function(i) {\n    var isStepStr = typeof i === 'string' && i in knowledge.stepNumber;\n    i = isStepStr ? knowledge.stepNumber[i] : i;\n    var len = this.scale.length;\n    var interval, octaves;\n\n    if (i < 0) {\n      interval = this.scale[i % len + len - 1];\n      octaves = Math.floor((i - 1) / len);\n    } else if (i % len === 0) {\n      interval = this.scale[len - 1];\n      octaves = (i / len) - 1;\n    } else {\n      interval = this.scale[i % len - 1];\n      octaves = Math.floor(i / len);\n    }\n\n    return this.tonic.interval(interval).interval(new Interval([octaves, 0]));\n  },\n\n  solfege: function(index, showOctaves) {\n    if (index)\n      return this.get(index).solfege(this, showOctaves);\n\n    return this.notes().map(function(n) {\n      return n.solfege(this, showOctaves);\n    });\n  },\n\n  interval: function(interval) {\n    interval = (typeof interval === 'string') ?\n      Interval.toCoord(interval) : interval;\n    return new Scale(this.tonic.interval(interval), this.scale);\n  },\n\n  transpose: function(interval) {\n    var scale = this.interval(interval);\n    this.scale = scale.scale;\n    this.tonic = scale.tonic;\n\n    return this;\n  }\n};\nScale.KNOWN_SCALES = Object.keys(scales);\n\nmodule.exports = Scale;\n","var knowledge = require('./knowledge');\n\nmodule.exports = function(teoria) {\n  var Note = teoria.Note;\n  var Chord = teoria.Chord;\n  var Scale = teoria.Scale;\n\n  Note.prototype.chord = function(chord) {\n    var isShortChord = chord in knowledge.chordShort;\n    chord = isShortChord ? knowledge.chordShort[chord] : chord;\n\n    return new Chord(this, chord);\n  };\n\n  Note.prototype.scale = function(scale) {\n    return new Scale(this, scale);\n  };\n};\n","var Note = require('./lib/note');\nvar Interval = require('./lib/interval');\nvar Chord = require('./lib/chord');\nvar Scale = require('./lib/scale');\n\nvar teoria;\n\n// never thought I would write this, but: Legacy support\nfunction intervalConstructor(from, to) {\n  // Construct a Interval object from string representation\n  if (typeof from === 'string')\n    return Interval.toCoord(from);\n\n  if (typeof to === 'string' && from instanceof Note)\n    return Interval.from(from, Interval.toCoord(to));\n\n  if (to instanceof Interval && from instanceof Note)\n    return Interval.from(from, to);\n\n  if (to instanceof Note && from instanceof Note)\n    return Interval.between(from, to);\n\n  throw new Error('Invalid parameters');\n}\n\nintervalConstructor.toCoord = Interval.toCoord;\nintervalConstructor.from = Interval.from;\nintervalConstructor.between = Interval.between;\nintervalConstructor.invert = Interval.invert;\n\nfunction noteConstructor(name, duration) {\n  if (typeof name === 'string')\n    return Note.fromString(name, duration);\n  else\n    return new Note(name, duration);\n}\n\nnoteConstructor.fromString = Note.fromString;\nnoteConstructor.fromKey = Note.fromKey;\nnoteConstructor.fromFrequency = Note.fromFrequency;\nnoteConstructor.fromMIDI = Note.fromMIDI;\n\nfunction chordConstructor(name, symbol) {\n  if (typeof name === 'string') {\n    var root, octave;\n    root = name.match(/^([a-h])(x|#|bb|b?)/i);\n    if (root && root[0]) {\n      octave = typeof symbol === 'number' ? symbol.toString(10) : '4';\n      return new Chord(Note.fromString(root[0].toLowerCase() + octave),\n                            name.substr(root[0].length));\n    }\n  } else if (name instanceof Note)\n    return new Chord(name, symbol);\n\n  throw new Error('Invalid Chord. Couldn\\'t find note name');\n}\n\nfunction scaleConstructor(tonic, scale) {\n  tonic = (tonic instanceof Note) ? tonic : teoria.note(tonic);\n  return new Scale(tonic, scale);\n}\n\nteoria = {\n  note: noteConstructor,\n\n  chord: chordConstructor,\n\n  interval: intervalConstructor,\n\n  scale: scaleConstructor,\n\n  Note: Note,\n  Chord: Chord,\n  Scale: Scale,\n  Interval: Interval\n};\n\n\nrequire('./lib/sugar')(teoria);\nexports = module.exports = teoria;\n","const bach = require('bach-cljs')//.default\nimport { Note } from './note'\n// import { valid } from './validate'\nimport {\n  scale as teoriaScale,\n  chord as teoriaChord,\n  Scale as TeoriaScale,\n  Chord as TeoriaChord\n} from 'teoria'\n\n// Either \"composes\" raw bach data into bach.json or, when provided an object, validates its structure as bach.json.\n// Main entry point for integrating with core bach ClojureScript library.\nexport const compose = source => {\n  if (typeof source === 'string') {\n    return bach.compose(source)\n  }\n\n  if (typeof source === 'object') {\n    // FIXME: Enable again once bach-json-schema is updated to v3\n    // return valid(source)\n    return source\n  }\n\n  throw TypeError(`Unsupported Bach.JSON data type (${typeof source}). Must be a bach.json object or raw bach string.`)\n}\n\nexport function scaleify (value) {\n  if (typeof value === 'string') {\n    const [tonic, type] = value.split(' ')\n\n    // TODO: Potentially use type.toLowerCase instead, to guarantee smooth interopability\n    return teoriaScale(tonic, type.toLowerCase())\n  } else if (value instanceof TeoriaScale) {\n    return value\n  }\n\n  throw TypeError(`Unknown scale type (${typeof value}): ${value}`)\n}\n\nexport function chordify (value) {\n  if (typeof value === 'string') {\n    return teoriaChord(value)\n  } else if (value instanceof TeoriaChord) {\n    return value\n  }\n\n  throw TypeError(`Unknown chord type (${typeof value}): ${value}`)\n}\n\nexport function scaleToString (scale) {\n  return `${scale.tonic.toString().slice(0,2)} ${scale.name}`\n}\n\nexport function notesInChord (value) {\n  return chordify(value)\n    .notes()\n    .map(note => Note.valueOf(note))\n}\n\nexport function notesInScale (value) {\n  return scaleify(value)\n    .notes()\n    .map(note => Note.valueOf(note))\n}\n\nexport function notesIn (kind, value) {\n  const notes = notesOf[kind]\n\n  if (notes) {\n    return notes(value)\n  }\n\n  return []\n}\n\n// TODO: Allow custom note resolvers to be registered globally or locally so people can easily define their own semantics\n//  - Could call this `itemsOf` to be more generic and flexible\nexport const notesOf = {\n  note:  value => value,\n  chord: value => notesInChord(value),\n  scale: value => notesInScale(value),\n  penta: value => notesInScale(value)\n}\n\n// TODO: Note.valueOf\nexport function notesIntersect (left, right) {\n return left.filter(note => right.includes(note))\n}\n\n// TODO: Use empty-schema (or another approach) to return default bach.json ehaders instead of empty object\n// export const headersOf = source => (source && source.headers) || {}\n\n// TODO: Remove\nexport const unitsOf = source => ({\n  step: source.units.beat.step,\n  pulse: source.units.beat.pulse,\n  bar: source.units.bar.step,\n  ms: (1 / source.units.time.bar)\n})\n\nexport const timesOf = source => {\n  const { time: { step, pulse, bar } } = source.units\n\n  return {\n    ms: 1,\n    second: 1000,\n    step,\n    pulse,\n    bar,\n    's': step,\n    'p': pulse,\n    'm': bar,\n    '2n': bar / 2,\n    '4n': bar / 4,\n    '8n': bar / 8,\n    '16n': bar / 16,\n    '32n': bar / 32,\n    '64n': bar / 64,\n    '4up': bar - (bar / 4),\n    '8up': bar - (bar / 8)\n  }\n}\n","import { note as teoriaNote, Note as TeoriaNote } from 'teoria'\nimport { notesIn } from './data'\n\nexport class Note {\n\n  static parse (value) {\n    if (typeof value === 'string') {\n      return teoriaNote(value)\n    } else if (typeof value === 'object' || value instanceof TeoriaNote) {\n      return value\n    }\n\n    throw TypeError(`Unknown note type (${typeof value}): ${value}`)\n  }\n\n  static all (kind, note) {\n    try {\n      return notesIn(kind, note)\n    } catch (e) {\n      return []\n    }\n  }\n\n  static hash (note) {\n    return Note.parse(note).chroma()\n  }\n\n  static pitchOf (note) {\n    return Note.valueOf(note)\n  }\n\n  // TODO: Consider using chroma instead\n  // TODO: Use this in nek, and anywhere else this same logic might be used\n  static valueOf (note) {\n    return Note.parse(note)\n      .scientific()\n      // .toLowerCase()\n      // TODO: Centralize! Replace everywhere in bach-sheet, nek, etc.\n      .replace(/[0-9]+$/, '')\n  }\n\n  static valuesOf (notes) {\n    return notes.map(Note.valueOf)\n  }\n\n  static generalize (note) {\n    return teoriaNote(Note.valueOf(note))\n  }\n\n  static unite (notes = []) {\n    return [...new Set(Note.valuesOf(notes))]\n  }\n\n  static equals (left, right) {\n    return Note.hash(left) == Note.hash(right)\n  }\n\n}\n","/**\n * Recursively calculates the greatest common denominator (GCD) between two values\n *\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport function gcd (a, b) {\n  if (b == 0) {\n    return a\n  }\n\n  return gcd(b, a % b)\n}\n\n/**\n * Modifies a value so that it is always between the provided min and max\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number}\n */\nexport function clamp (value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value))\n}\n\n/**\n * Interpolation function returning the value between x and y at a specific ratio\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\nexport function lerp (ratio, x, y) {\n  return (x * (1 - ratio)) + (y * ratio)\n}\n\n/**\n * Interpolation function returning the ratio of a value clamped between x and y\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\n\nexport function invlerp (value, x, y) {\n  return clamp((value - x) / (y - x))\n}\n\n/**\n * Determines the element found in an array at a given ratio\n *\n * @param {Float} ratio\n * @param {Array} all\n */\nexport function steps (ratio, all) {\n  ratio %= 1\n\n  if (ratio < 0) ratio += 1\n\n  return all[Math.floor(ratio * all.length)]\n}\n","import { compose, unitsOf, timesOf } from './data'\nimport { gcd, clamp, lerp } from './math'\n\nexport class Durations {\n\n  constructor (source) {\n    this.source = compose(source)\n  }\n\n  get steps () {\n    // return this.source.signals\n    return this.source.steps\n  }\n\n  get metrics () {\n    return this.source.metrics\n  }\n\n  get min () {\n    return this.metrics.min\n  }\n\n  get max () {\n    return this.metrics.max\n  }\n\n  get total () {\n    return this.metrics.total\n  }\n\n  get step () {\n    return this.units.step\n  }\n\n  get pulse () {\n    return this.units.pulse\n  }\n\n  get bar () {\n    return this.units.bar\n  }\n\n  get units () {\n    // TODO: Remove, just return this.units\n    return unitsOf(this.source)\n  }\n\n  get times () {\n    return timesOf(this.source)\n  }\n\n  get interval () {\n    return this.times.step\n  }\n\n  cast (duration, { is = 'step', as = 'pulse' } = {}) {\n    return duration / (this.times[as] / this.times[is])\n  }\n\n  metronize (duration, { is = 'ms', as = 'pulse' } = {}) {\n    const index = this.cast(duration, { is, as })\n    const bar = this.cast(this.bar, { as })\n\n    return Math.floor(index % bar)\n  }\n\n  ratio (duration, is = 'step') {\n    return this.cast(duration, { is, as: 'step' }) / this.total\n  }\n\n  percentage (duration, is = 'step') {\n    return this.ratio(duration, is) * 100\n  }\n\n  clamp (duration, { is = 'step', min = 0, max } = {}) {\n    const step = this.cast(duration, { is, as: 'step' })\n    const head = this.cast(min || 0, { is, as: 'step' })\n    const tail = this.cast(max || this.total, { is, as: 'step' })\n\n    return clamp(step, head, tail)\n  }\n\n  cyclic (duration, { is = 'step', min = 0, max } = {}) {\n    const step = this.cast(duration, { is, as: 'step' })\n    const head = this.cast(min || 0, { is, as: 'step' })\n    const tail = this.cast(max || this.total, { is, as: 'step' })\n    const key = duration >= head ? duration : duration + tail\n\n    return key % tail\n  }\n\n  interpolate (ratio, { is = 'step', min = 0, max } = {}) {\n    const head = this.cast(min || 0, { is, as: 'step' })\n    const tail = this.cast(max || this.total, { is, as: 'step' })\n\n    return lerp(ratio, head, tail)\n  }\n\n  at (duration, is = 'step') {\n    const step = this.cast(duration, { is, as: 'step' })\n    const index = this.cyclic(step)\n    const state = this.steps[index]\n    const [[beat, ...elem], play, stop] = state\n\n    return {\n      beat,\n      // TODO: Add once tests are updated\n      // elem,\n      play,\n      stop,\n      index\n    }\n\n    // return Object.entries(this.steps)\n    //   .reduce((acc, [key, steps]) => ({\n    //     ...acc,\n    //     [key]: steps[index]\n    //   }), { index })\n  }\n\n  // TODO: Either replace or improve via inspiration with this:\n  // @see: https://tonejs.github.io/docs/r13/Time#quantize\n  rhythmic (duration, {\n    is = 'ms',\n    units = ['8n', '4n'],\n    calc = 'floor',\n    size = 'min'\n  } = {}) {\n    const durations = units\n      .map(unit => {\n        const value = this.cast(duration, { is, as: unit })\n        const result = Math[calc](value)\n\n        return this.cast(result, { is: unit, as: is })\n      })\n      .sort((a, b) => Math.abs(duration - a) - Math.abs(duration - b))\n\n    return Math[size](...durations)\n  }\n\n}\n","import { note as teoriaNote } from 'teoria'\nimport { compose } from './data'\nimport { Note } from './note'\n\n// import { elementize } from 'bach-cljs'\nconst { elementize } = require('bach-cljs')\n\n/**\n * Represents a single and unique playable element.\n * Uniqueness and equality are determined by `id`.\n */\nexport class Element {\n\n  constructor (data) {\n    this.data = data\n  }\n\n  get id () {\n    return `${this.data.kind}.${this.data.id}`\n  }\n\n  get uid () {\n    return Element.uid(this.id)\n  }\n\n  get value () {\n    return this.data.value\n  }\n\n  get props () {\n    return this.data.props || []\n  }\n\n  get kind () {\n    return this.data.kind//.toLowerCase()\n  }\n\n  get duration () {\n    return this.data.duration\n  }\n\n  get notes () {\n    return Note.all(this.kind, this.value)\n  }\n\n  // TODO: Hoist out to Music, leaky abstraction\n  get musical () {\n    return MUSICAL_ELEMENTS.includes(this.kind)\n  }\n\n  static uid (id) {\n    return id.split('.').pop()\n  }\n\n}\n\nexport class Elements {\n\n  constructor ({ source, store, cast } = {}) {\n    this.source = compose(source)\n    this.cast = cast || (_ => _)\n    this.data = store || Elements.cast(this.source.elements, cast)\n  }\n\n  get all () {\n    return this.kinds.flatMap(kind =>\n      Object.values(this.data[kind])\n        .map(elem => new Element(elem))\n    )\n  }\n\n  get kinds () {\n    return Object.keys(this.data)\n  }\n\n  get values () {\n    return this.all.map(elem => elem.value)\n  }\n\n  get ids () {\n    return this.all.map(elem => elem.id)\n  }\n\n  get (id) {\n    const parts = typeof id === 'string' ? id.split('.') : []\n\n    if (parts.length === 2) {\n      const [kind, uid] = parts\n      const elem = this.data[kind][uid]\n\n      return elem ? { ...elem, id: uid, kind } : null\n    }\n\n    throw TypeError('Element id must be a string in the format of \"kind.hash\"')\n  }\n\n  resolve (elem) {\n    // FIXME: Use json-schema validator here instead to support cross-context typing (instanceof doesn't work from workers etc.)\n    // if (elem instanceof Element) return elem\n    if (typeof elem === 'object') return elem\n    if (typeof elem === 'string') return this.get(elem)\n    // if (typeof elem === 'object') return new Element(this.cast(elem))\n\n    throw TypeError('Failed to resolve element due to unsupported data type')\n  }\n\n  // TODO: Rename to `insert`\n  register ({ kind, value, props }) {\n    if (!kind || typeof kind !== 'string') throw TypeError('kind must be a non-empty string')\n    if (value == null) throw TypeError('value must be defined and non-null')\n\n    const elem = elementize(kind, [value, ...props])\n    const uid = Element.uid(elem.id)\n    const record = this.cast({ ...elem, id: uid, kind })\n\n    this.data[kind] = this.data[kind] || {}\n    this.data[kind][uid] = record\n\n    this.source.elements = this.data\n\n    return new Element(record)\n  }\n\n  static cast (elements, as = _ => _) {\n    if (!elements) return null\n\n    // TODO: Validate element shape with JSON Schema\n    return Object.entries(elements)\n      .reduce((acc, [kind, ids]) => {\n        const elems = Object.entries(ids)\n          .reduce((acc, [id, elem]) => ({\n            ...acc,\n            [id]: as({ id, kind, ...elem })\n          }), {})\n\n        return { ...acc, [kind]: elems }\n      }, {})\n  }\n\n}\n\n// TODO: Hoist out to Music, leaky abstraction\nexport const MUSICAL_ELEMENTS = ['note', 'chord', 'scale', ' penta'] // triad\n","import { Element } from './elements'\nimport { Note } from './note'\n\n/**\n * Represents a single beat in a track.\n *\n * Beats are represented as a tuple and may contain multiple elements\n *\n * duration -> items -> elements\n */\nexport class Beat {\n\n  constructor (data, store) {\n    this.data = data\n    this.store = store\n  }\n\n  get id () {\n    return this.data.id\n  }\n\n  get index () {\n    return this.data.index\n  }\n\n  get duration () {\n    return this.data.duration\n  }\n\n  get items () {\n    return this.data.items.map(item => ({\n      ...item,\n      elements: item.elements.map(elem => this.store.resolve(elem))\n    }))\n  }\n\n  get elements () {\n    return this.data.items.flatMap(({ elements }) =>\n      elements.map(elem => this.store.resolve(elem))\n    )\n  }\n\n  get kinds () {\n    return this.all(({ kind }) => kind)\n  }\n\n  get values () {\n    return this.all(({ value }) => value)\n  }\n\n  get notes () {\n    // return Note.unite(this.elements.flatMap(({ notes }) => notes))\n    return this.notesOf(this.elements)\n  }\n\n  // Provides map of elements in a beat grouped by kind.\n  // FIXME: Doesn't support multiple elements of the same kind\n  get parts () {\n    return this.elements.reduce((parts, elem) => ({\n     ...parts,\n      [elem.kind]: elem\n    }), {})\n  }\n\n  get musical () {\n    return this.elements.every(elem => elem.musical)\n  }\n\n  all (cast = _ => _) {\n    return [...new Set(this.elements.map(cast))]\n  }\n\n  find (kind) {\n    return this.elements.find(elem => kind === elem.kind)\n  }\n\n  filter (kind) {\n    return this.elements.filter(elem => kind === elem.kind)\n  }\n\n  // first (kinds) {\n  either (kinds) {\n    return kinds.reduce((acc, kind) => {\n      // return acc.length ? acc : this.elements.filter(elem => kind === elem.kind)\n      return acc.length ? acc : this.filter(kind)\n    }, [])\n    // for (kind of kinds) {\n    //   const elems = item.elements.filter(elem => kind === elem.kind)\n\n    //   if (elems.length) return elems\n    // }\n  }\n\n  notesOf (elements) {\n    return Note.unite(elements.flatMap(({ notes }) => notes))\n  }\n\n  static from (beats, store) {\n    if (Array.isArray(beats)) {\n      return beats.map(beat => new Beat(beat, store))\n    }\n\n    // return new Beat(beats, store)\n    return [new Beat(beats, store)]\n  }\n\n}\n\n// export class BeatItem {\n\n//   constructor (data, beat) {\n//     this.data = data\n//     this.beat = beat\n//   }\n\n//   get duration () {\n//     return this.data.duration\n//   }\n\n//   get elements () {\n//     return this.data.elements.map(elem => this.beat.store.resolve(elem))\n//   }\n\n//   add (elem) {\n//     const record = this.beat.store.register(elem)\n\n//     this.data.elements = this.data.elements.concat(record.id)\n\n//     return this\n//   }\n\n// }\n","import { Note } from './note'\nimport { Durations } from './durations'\nimport { Element, Elements, MUSICAL_ELEMENTS } from './elements'\nimport { Beat } from './beats'\nimport { compose, notesIn } from './data'\n\n// NOTE: Basically Track v3. Probably just rename to Track eventually.\nexport class Music {\n\n  constructor (source) {\n    this.source = source\n    this.data = compose(source)\n    this.store = this.parses ? new Elements({\n      source: this.data,\n      cast: elem => ({\n        ...elem,\n        notes: Note.all(elem.kind, elem.value)\n      })\n    }) : null\n\n    // console.log('COMPOSED DATA (2)', this.data)\n  }\n\n  get headers () {\n    return this.data.headers\n  }\n\n  get metrics () {\n    return this.data.metrics\n  }\n\n  get units () {\n    return this.data.units\n  }\n\n  get meter () {\n    return this.headers.meter\n  }\n\n  get tempo () {\n    return this.headers.tempo\n  }\n\n  get elements () {\n    return this.store.all\n  }\n\n  get beats () {\n    return Beat.from(this.data.beats, this.store)\n  }\n\n  get durations () {\n    return new Durations(this.data)\n  }\n\n  get notes () {\n    return Note.unite(\n      this.beats.flatMap(beat =>\n        beat.elements.flatMap(({ notes }) => notes)\n      )\n    )\n  }\n\n  get musical () {\n    return this.beats.every(beat => beat.musical)\n  }\n\n  // get playable () {\n  //   return this.elements.every(({ notes }) => !!notes.length)\n  // }\n\n  get step () {\n    return this.units.beat.step\n  }\n\n  get interval () {\n    return this.units.time.step\n  }\n\n  get parses () {\n    return !this.data.fail\n  }\n\n  at (duration, is = 'step') {\n    const cursor = this.durations.at(duration, is)\n\n    return {\n      beat: this.beats[cursor.beat],\n      play: (cursor.play || []).map(elem => this.store.resolve(elem)),\n      stop: (cursor.stop || []).map(elem => this.store.resolve(elem))\n    }\n  }\n\n  // add (id, elem) {\n  // insert\n  // TODO: Probably move to `rebach` package\n  add (record) {\n    const beat = this.beats.find(beat => beat.id == record.beat)\n    const elem = this.store.register(record.elem)\n\n    console.log('adding beat', record, beat, this.beats.map(({ id }) => id))\n\n    this.data\n      .beats[beat.id]\n      .items[record.item || 0]\n      .elements\n      .push(elem)\n\n    // const item = this.data.beats[beat].items[record.item || 0]\n    // const stop = this.durations.cyclic(beat.index + item.duration)\n\n    // beat\n    this.data.steps[beat.index][0].push(elem.id)\n    // play\n    this.data.steps[beat.index][1].push(elem.id)\n    // stop\n    this.data.steps[beat.index][2].push(elem.id)\n\n    // TODO: Add to `steps`!\n\n    // return this\n    return new Element(elem)\n  }\n\n  adjust (tempo) {\n\n  }\n\n}\n"],"names":["notes","c","d","e","f","g","a","b","h","name","accidentalValues","accidentalNumber","acc","accidentalInterval","val","scientific","format","parser","match","length","noteName","octave","accidental","toLowerCase","accidentalValue","accval","interval","coord","coords","A4","helmholtz","replace","parts","Error","note","octaveFirst","octaveLast","lower","stdPitch","Math","pow","intervals","unison","second","third","fourth","fifth","sixth","seventh","intervalFromFifth","intervalsIndex","fifths","accidentals","sharp","durations","qualityLong","P","M","m","A","AA","dd","alterations","perfect","minor","symbols","chordShort","stepNumber","intervalSolfege","add","sub","mul","sum","pattern","pAlts","mAlts","baseIntervals","simple","quality","number","sign","octaves","base","alts","alt","Interval","prototype","knowledge","semitones","vector","abs","value","toMultiply","floor","product","without","i","diff","type","qualityValue","direction","dir","is","ignore","toAdd","isCompound","toSubtract","invert","qual","idx","lng","equal","greater","semi","isemi","smaller","toString","toCoord","from","to","between","sInterval","pad","str","ch","len","Note","duration","dots","round","key","white","midi","fq","concertPitch","pitchFq","chroma","transpose","toUpperCase","padchar","padcount","enharmonics","oneaccidental","limit","solfege","scale","showOctaves","tonic","stroke","count","ceil","scaleDegree","inter","index","current","durationName","durationInSeconds","bpm","beatUnit","secs","dont","fromString","dur","fromKey","distance","subDiff","arg","fromFrequency","cents","originalFq","log","fromMIDI","SYMBOLS","symbol","parsing","additionals","chordLength","explicitMajor","setChord","sub3","substr","sub2","isNaN","max","split","flat","arr","next","push","token","intPos","String","Chord","root","_voicing","bass","daccord","bassInterval","voicing","n","resetVoicing","dominant","additional","subdominant","parallel","chordType","has","get","scales","aeolian","blues","chromatic","dorian","doubleharmonic","harmonicminor","ionian","locrian","lydian","majorpentatonic","melodicminor","minorpentatonic","mixolydian","phrygian","wholetone","harmonicchromatic","major","flamenco","Scale","scaleName","hasOwnProperty","isStepStr","KNOWN_SCALES","teoria","chord","isShortChord","intervalConstructor","noteConstructor","chordConstructor","scaleConstructor","require$$0","module","bach","require","compose","source","TypeError","scaleify","teoriaScale","TeoriaScale","chordify","teoriaChord","TeoriaChord","scaleToString","notesInChord","valueOf","notesInScale","notesIn","kind","notesOf","penta","notesIntersect","left","right","unitsOf","step","units","beat","pulse","bar","ms","time","timesOf","teoriaNote","TeoriaNote","parse","valuesOf","hash","gcd","clamp","min","lerp","ratio","x","y","invlerp","steps","all","Durations","metrics","total","times","as","cast","head","tail","cyclic","state","elem","play","stop","calc","size","unit","result","elementize","Element","data","id","uid","props","MUSICAL_ELEMENTS","pop","Elements","store","_","elements","kinds","record","ids","elems","Beat","items","item","resolve","musical","unite","beats","Music","parses","headers","meter","tempo","fail","cursor","at","register","console"],"mappings":"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"}