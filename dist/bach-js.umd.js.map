{"version":3,"file":"bach-js.umd.js","sources":["../node_modules/ajv/dist/compile/codegen/code.js","../node_modules/ajv/dist/compile/codegen/scope.js","../node_modules/ajv/dist/compile/codegen/index.js","../node_modules/ajv/dist/compile/util.js","../node_modules/ajv/dist/compile/names.js","../node_modules/ajv/dist/compile/errors.js","../node_modules/ajv/dist/compile/validate/boolSchema.js","../node_modules/ajv/dist/compile/rules.js","../node_modules/ajv/dist/compile/validate/applicability.js","../node_modules/ajv/dist/compile/validate/dataType.js","../node_modules/ajv/dist/compile/validate/defaults.js","../node_modules/ajv/dist/vocabularies/code.js","../node_modules/ajv/dist/compile/validate/keyword.js","../node_modules/ajv/dist/compile/validate/subschema.js","../node_modules/fast-deep-equal/index.js","../node_modules/json-schema-traverse/index.js","../node_modules/ajv/dist/compile/resolve.js","../node_modules/ajv/dist/compile/validate/index.js","../node_modules/ajv/dist/runtime/validation_error.js","../node_modules/ajv/dist/compile/ref_error.js","../node_modules/ajv/dist/compile/index.js","../node_modules/uri-js/dist/es5/uri.all.js","../node_modules/ajv/dist/runtime/uri.js","../node_modules/ajv/dist/core.js","../node_modules/ajv/dist/vocabularies/core/id.js","../node_modules/ajv/dist/vocabularies/core/ref.js","../node_modules/ajv/dist/vocabularies/core/index.js","../node_modules/ajv/dist/vocabularies/validation/limitNumber.js","../node_modules/ajv/dist/vocabularies/validation/multipleOf.js","../node_modules/ajv/dist/runtime/ucs2length.js","../node_modules/ajv/dist/vocabularies/validation/limitLength.js","../node_modules/ajv/dist/vocabularies/validation/pattern.js","../node_modules/ajv/dist/vocabularies/validation/limitProperties.js","../node_modules/ajv/dist/vocabularies/validation/required.js","../node_modules/ajv/dist/vocabularies/validation/limitItems.js","../node_modules/ajv/dist/runtime/equal.js","../node_modules/ajv/dist/vocabularies/validation/uniqueItems.js","../node_modules/ajv/dist/vocabularies/validation/const.js","../node_modules/ajv/dist/vocabularies/validation/enum.js","../node_modules/ajv/dist/vocabularies/validation/index.js","../node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","../node_modules/ajv/dist/vocabularies/applicator/items.js","../node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","../node_modules/ajv/dist/vocabularies/applicator/items2020.js","../node_modules/ajv/dist/vocabularies/applicator/contains.js","../node_modules/ajv/dist/vocabularies/applicator/dependencies.js","../node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","../node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","../node_modules/ajv/dist/vocabularies/applicator/properties.js","../node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","../node_modules/ajv/dist/vocabularies/applicator/not.js","../node_modules/ajv/dist/vocabularies/applicator/anyOf.js","../node_modules/ajv/dist/vocabularies/applicator/oneOf.js","../node_modules/ajv/dist/vocabularies/applicator/allOf.js","../node_modules/ajv/dist/vocabularies/applicator/if.js","../node_modules/ajv/dist/vocabularies/applicator/thenElse.js","../node_modules/ajv/dist/vocabularies/applicator/index.js","../node_modules/ajv/dist/vocabularies/format/format.js","../node_modules/ajv/dist/vocabularies/format/index.js","../node_modules/ajv/dist/vocabularies/metadata.js","../node_modules/ajv/dist/vocabularies/draft7.js","../node_modules/ajv/dist/vocabularies/discriminator/types.js","../node_modules/ajv/dist/vocabularies/discriminator/index.js","../node_modules/ajv/dist/ajv.js","../src/validate.js","../src/data.js","../src/note.js","../src/math.js","../node_modules/segu/dist/segu.esm.js","../src/durations.js","../src/elements.js","../src/beats.js","../src/music.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    narrowSchemaTypes(it, types);\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction narrowSchemaTypes(it, withTypes) {\n    const ts = [];\n    for (const t of it.dataTypes) {\n        if (includesType(withTypes, t))\n            ts.push(t);\n        else if (withTypes.includes(\"integer\") && t === \"number\")\n            ts.push(\"integer\");\n    }\n    it.dataTypes = ts;\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.URI = global.URI || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nfunction typeOf(o) {\n    return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n    LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n    return {\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n        IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n        IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split('@');\n\tvar result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tvar labels = string.split('.');\n\tvar encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don't use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1('invalid-input');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1('overflow');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t'version': '2.1.0',\n\t/**\n  * An object of methods to convert from JavaScript's internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = \"\";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(\":\").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === \"0\") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n        } else {\n            newHost = fields.join(\":\");\n        }\n        if (zone) {\n            newHost += \"%\" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = \"same-document\";\n        } else if (components.scheme === undefined) {\n            components.reference = \"relative\";\n        } else if (components.fragment === undefined) {\n            components.reference = \"absolute\";\n        } else {\n            components.reference = \"uri\";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n        //check if scheme can't handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || \"URI can not be parsed.\";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push(\"@\");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n        }));\n    }\n    if (typeof components.port === \"number\" || typeof components.port === \"string\") {\n        uriTokens.push(\":\");\n        uriTokens.push(String(components.port));\n    }\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, \"\");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, \"/\");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, \"/\");\n            output.pop();\n        } else if (input === \".\" || input === \"..\") {\n            input = \"\";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error(\"Unexpected dot segment condition\");\n            }\n        }\n    }\n    return output.join(\"\");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== \"suffix\" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(\":\");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== \"suffix\") {\n            uriTokens.push(\"//\");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== \"/\") {\n            uriTokens.push(\"/\");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push(\"?\");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push(\"#\");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(\"\"); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || \"\");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || \"\");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === \"/\") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = \"/\" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: 'null' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === \"string\") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === \"object\") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === \"string\") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === \"object\") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === \"string\") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === \"object\") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: \"http\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || \"HTTP URIs must have a host.\";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        var secure = String(components.scheme).toLowerCase() === \"https\";\n        //normalize the default port\n        if (components.port === (secure ? 443 : 80) || components.port === \"\") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = \"/\";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: \"https\",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nfunction isSecure(wsComponents) {\n    return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n//RFC 6455\nvar handler$2 = {\n    scheme: \"ws\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        var wsComponents = components;\n        //indicate if the secure flag is set\n        wsComponents.secure = isSecure(wsComponents);\n        //construct resouce name\n        wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n        wsComponents.path = undefined;\n        wsComponents.query = undefined;\n        return wsComponents;\n    },\n    serialize: function serialize(wsComponents, options) {\n        //normalize the default port\n        if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n            wsComponents.port = undefined;\n        }\n        //ensure scheme matches secure flag\n        if (typeof wsComponents.secure === 'boolean') {\n            wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';\n            wsComponents.secure = undefined;\n        }\n        //reconstruct path from resource name\n        if (wsComponents.resourceName) {\n            var _wsComponents$resourc = wsComponents.resourceName.split('?'),\n                _wsComponents$resourc2 = slicedToArray(_wsComponents$resourc, 2),\n                path = _wsComponents$resourc2[0],\n                query = _wsComponents$resourc2[1];\n\n            wsComponents.path = path && path !== '/' ? path : undefined;\n            wsComponents.query = query;\n            wsComponents.resourceName = undefined;\n        }\n        //forbid fragment component\n        wsComponents.fragment = undefined;\n        return wsComponents;\n    }\n};\n\nvar handler$3 = {\n    scheme: \"wss\",\n    domainHost: handler$2.domainHost,\n    parse: handler$2.parse,\n    serialize: handler$2.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nvar HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nvar ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nvar QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nvar VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nvar SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nvar UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nvar NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nvar NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$4 = {\n    scheme: \"mailto\",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split(\"&\");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split(\"=\");\n                switch (hfield[0]) {\n                    case \"to\":\n                        var toAddrs = hfield[1].split(\",\");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case \"subject\":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case \"body\":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split(\"@\");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join(\"@\");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf(\"@\");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n                to[x] = localPart + \"@\" + domain;\n            }\n            components.path = to.join(\",\");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join(\"&\");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$5 = {\n    scheme: \"urn\",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || \"urn\";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + \":\" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || \"urn\";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + \":\" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + \":\" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$6 = {\n    scheme: \"urn:uuid\",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\nSCHEMES[handler$5.scheme] = handler$5;\nSCHEMES[handler$6.scheme] = handler$6;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=ajv.js.map","import schema from 'bach-json-schema'\nimport Ajv from 'ajv'\n\nconst ajv = new Ajv({ strictTuples: false, code: { es5: true }, unicodeRegExp: false })\n\nexport const validate = ajv.compile(JSON.parse(JSON.stringify(schema)))\n\nexport const valid = bach => {\n  if (!validate(bach)) {\n    const message = 'Invalid Bach.JSON source data'\n    const pretty = json => JSON.stringify(json, null, 2)\n\n    console.error(message, pretty(bach))\n    console.error(pretty(validate.errors))\n\n    throw TypeError(`Invalid Bach.JSON source data`)\n  }\n\n  return bach\n}\n\nexport default validate\n","import bach from 'bach-cljs'\nimport { Note } from './note'\nimport { valid } from './validate'\nimport {\n  scale as teoriaScale,\n  chord as teoriaChord,\n} from 'teoria'\n\n/**\n * Either \"composes\" raw bach data into bach.json or, when provided an object, validates its structure as bach.json.\n * Given a string, automatically upgrades source to v3 (simple replacement of !play with play!).\n * Main entry point for integrating with core bach ClojureScript library.\n */\nexport const compose = (source, strict = true) => {\n  if (typeof source === 'string') {\n    const upgraded = source.replace(/!play/i, 'play!')\n\n    return bach.compose(upgraded)\n  }\n\n  if (typeof source === 'object') {\n    return strict ? valid(source) : source\n  }\n\n  throw TypeError(`Unsupported Bach.JSON data type (${typeof source}). Must be a bach.json object or raw bach string.`)\n}\n\nexport const compile = (source, strict = true) => {\n  const data = compose(source, strict)\n\n  return JSON.parse(JSON.stringify(data))\n}\n\nexport function scaleify (value) {\n  if (typeof value === 'string') {\n    const [tonic, type] = value.split(' ')\n\n    return teoriaScale(tonic, type.toLowerCase())\n  } else if (typeof value === 'object') {\n    return value\n  }\n\n  throw TypeError(`Unknown scale type (${typeof value}): ${value}`)\n}\n\nexport function chordify (value) {\n  if (typeof value === 'string') {\n    return teoriaChord(value)\n  } else if (typeof value === 'object') {\n    return value\n  }\n\n  throw TypeError(`Unknown chord type (${typeof value}): ${value}`)\n}\n\nexport function scaleToString (scale) {\n  return `${scale.tonic.toString().slice(0,2)} ${scale.name}`\n}\n\nexport function notesInChord (value) {\n  return chordify(value)\n    .notes()\n    .map(note => Note.valueOf(note))\n}\n\nexport function notesInScale (value) {\n  return scaleify(value)\n    .notes()\n    .map(note => Note.valueOf(note))\n}\n\nexport function notesIn (kind, value) {\n  const notes = notesOf[kind]\n\n  if (notes) {\n    return notes(value)\n  }\n\n  return []\n}\n\n// TODO: Allow custom note resolvers to be registered globally or locally so people can easily define their own semantics\n//  - Could call this `itemsOf` to be more generic and flexible\nexport const notesOf = {\n  note:  value => [value],\n  chord: value => notesInChord(value),\n  scale: value => notesInScale(value),\n  penta: value => notesInScale(value)\n}\n\n// TODO: Note.valueOf\nexport function notesIntersect (left, right) {\n return left.filter(note => right.includes(note))\n}\n","import { note as teoriaNote, Note as TeoriaNote } from 'teoria'\nimport { notesIn } from './data'\n\n// TODO: Replce with individual functions and remove class, no longer necessary\n// TODO: Remove cyclic reference between data module by bringing in all note related functions.\nexport class Note {\n\n  static parse (value) {\n    if (typeof value === 'string') {\n      return teoriaNote(value)\n    } else if (typeof value === 'object' || value instanceof TeoriaNote) {\n      return value\n    }\n\n    throw TypeError(`Unknown note type (${typeof value}): ${value}`)\n  }\n\n  static all (kind, note) {\n    try {\n      return notesIn(kind, note)\n    } catch (e) {\n      return []\n    }\n  }\n\n  static hash (note) {\n    return Note.parse(note).chroma()\n  }\n\n  static pitchOf (note) {\n    return Note.valueOf(note)\n  }\n\n  // TODO: Consider using chroma instead\n  // TODO: Use this in nek, and anywhere else this same logic might be used\n  static valueOf (note) {\n    return Note.parse(note)\n      .scientific()\n      // .toLowerCase()\n      // TODO: Centralize! Replace everywhere in bach-sheet, nek, etc.\n      .replace(/[0-9]+$/, '')\n  }\n\n  static valuesOf (notes) {\n    return notes.map(Note.valueOf)\n  }\n\n  static generalize (note) {\n    return teoriaNote(Note.valueOf(note))\n  }\n\n  static unite (notes = []) {\n    return notes.reduce((all, note) => {\n      const value = Note.valueOf(note)\n      const has = Note.includes(all, value)\n\n      return !has ? all.concat(value) : all\n    }, [])\n  }\n\n  static includes (notes = [], note) {\n    return notes.some(other => Note.equals(other, note))\n  }\n\n  static equals (left, right) {\n    return Note.hash(left) == Note.hash(right)\n  }\n\n}\n","/**\n * Recursively calculates the greatest common denominator (GCD) between two values\n *\n * @param {Number} a\n * @param {Number} b\n * @returns {Number}\n */\nexport function gcd (a, b) {\n  if (b == 0) {\n    return a\n  }\n\n  return gcd(b, a % b)\n}\n\n/**\n * Modifies a value so that it is always between the provided min and max\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number}\n */\nexport function clamp (value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value))\n}\n\n/**\n * Interpolation function returning the value between x and y at a specific ratio\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\nexport function lerp (ratio, x, y) {\n  return (x * (1 - ratio)) + (y * ratio)\n}\n\n/**\n * Interpolation function returning the ratio of a value clamped between x and y\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\n\nexport function invlerp (value, x, y) {\n  return clamp((value - x) / (y - x))\n}\n\n/**\n * Determines the element found in an array at a given ratio\n *\n * @param {Float} ratio\n * @param {Array} all\n */\nexport function steps (ratio, all) {\n  ratio %= 1\n\n  if (ratio < 0) ratio += 1\n\n  return all[Math.floor(ratio * all.length)]\n}\n","class Lens {\n\n  constructor ({\n    unit = 1,\n    is = 1,\n    as = 1,\n    min = 0,\n    max = 1,\n    grid = 1,\n    origin = 0\n  } = {}) {\n    this.data = { unit, is, as, min, max, grid, origin };\n    // Would improve flexibility by wrapping all getters in Lens with this, allowing Units and Lens to use the same normalization function\n    // this.normalize = normalize || Units.normalize\n  }\n\n  get unit () {\n    return this.data.unit || this.data.is || 1\n  }\n\n  get is () {\n    return this.data.is || this.unit\n  }\n\n  get as () {\n    return this.data.as || this.unit\n  }\n\n  get min () {\n    return this.data.min || 0\n  }\n\n  get max () {\n    return this.data.max || Number.MAX_SAFE_INTEGER\n  }\n\n  get grid () {\n    return this.data.grid || 1\n  }\n\n  get origin () {\n    return this.data.origin || 0\n  }\n\n  use (data) {\n    return Object.assign({}, this.data, data)\n  }\n\n  assign (data) {\n    this.data = this.use(data);\n\n    return this\n  }\n\n}\n\n/**\n * Recursively calculates the greatest common denominator (GCD) between two values\n *\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\nfunction gcd (x, y) {\n  return y === 0 ? x : gcd(y, x % y)\n}\n\n/**\n * Modifies a value so that it is always between x and y\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\nfunction clamp (value, x = 0, y = 1) {\n  return Math.min(y, Math.max(x, value))\n}\n\n/**\n * Interpolation function returning the value between x and y at a specific ratio\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\nfunction lerp (ratio, x, y) {\n  return (x * (1 - ratio)) + (y * ratio)\n}\n\n/**\n * Interpolation function returning the ratio of a value clamped between x and y\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n */\n\nfunction invlerp (value, x, y) {\n  return clamp((value - x) / (y - x))\n}\n\n/**\n * Cycles a value around an range (from x to y).\n *\n * @param {Number} value\n * @param {Number} x\n * @param {Number} y\n * @returns {Number}\n*/\nfunction cyclic (value, x, y) {\n  return (value >= x ? value : value + y) % y\n}\n\n/**\n * Projects a value given a source domain (from) to a target domain (to).\n * Domains are provided as range tuples ([min, max]).\n *\n * @param {Number} value\n * @param {Array<Number>} from\n * @param {Array<Number>} to\n * @returns {Number}\n */\nfunction project (value, from = [0, 0], to = [0, 0]) {\n  return (value - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0]\n}\n\n/**\n * Determines the element found in an array at a given ratio\n *\n * @param {Float} ratio\n * @param {Array} all\n */\nfunction steps (ratio, all) {\n  ratio %= 1;\n\n  if (ratio < 0) ratio += 1;\n\n  return all[Math.floor(ratio * all.length)]\n}\n\n// TODO: Support calc method for allowing conversion of units via string (like CSS):\n\nclass Units {\n\n  constructor ({\n    map = {},\n    lens = {}\n  } = {}) {\n    this.map = map;\n    this.lens = new Lens(lens);\n  }\n\n  normalize (unit) {\n    if (typeof unit === 'number') {\n      return unit\n    }\n\n    if (typeof unit === 'string') {\n      const value = this.map[unit] || 1;\n\n      return typeof value === 'function' ? value(unit, this) : Number(value)\n    }\n\n    return 1\n  }\n\n  scope (value = 1, lens = this.lens) {\n    const { is, as, min, max, origin } = this.lens.use(lens);\n    const index = this.cast(value - origin, { is, as });\n    const head = this.cast(min || 0, { is, as });\n    const tail = this.cast(max || value, { is, as });\n\n    return { value, index, head, tail }\n  }\n\n  // TODO: Allow `is` and `as` to be provided as mapping functions\n  cast (value = 1, { is = this.lens.unit, as = this.lens.unit } = {}) {\n    return this.normalize(value) / (this.normalize(as) / this.normalize(is))\n  }\n\n  snap (value, lens = this.lens) {\n    const { index } = this.scope(value, lens);\n    const unit = this.normalize(lens.as || lens.unit);\n    const calc = typeof lens.calc === 'function' ? lens.calc : Math.floor;\n\n    return calc(index) * unit\n  }\n\n  clamp (value, lens) {\n    const { index, head, tail } = this.scope(value, lens);\n\n    return clamp(index, head, tail)\n  }\n\n  cyclic (value, lens) {\n    const { index, head, tail } = this.scope(value, lens);\n\n    return cyclic(index, head, tail)\n  }\n\n  lerp (ratio, lens) {\n    const { head, tail } = this.scope(0, lens);\n\n    return lerp(ratio, head, tail)\n  }\n\n  invlerp (value, lens) {\n    const { index, head, tail } = this.scope(value, lens);\n\n    return invlerp(index, head, tail)\n  }\n\n  delta (value, lens) {\n    const { index, head } = this.scope(value, lens);\n\n    return index - head\n  }\n\n  range (value, lens) {\n    const { head, tail } = this.scope(value, lens);\n\n    return tail - head\n  }\n\n  progress (value, lens) {\n    const delta = this.delta(value, lens);\n    const range = this.range(value, lens);\n\n    return delta / range\n  }\n\n  fold (value, lens = this.lens) {\n    const grid = lens.grid || 1;\n    const basis = gcd(value, grid);\n    const size = this.clamp(value, lens);\n    const container = this.snap(size, { as: basis });\n    const ratio = Math.max(1, Math.min(value / basis, grid));\n    const min = value >= grid ? grid : basis;\n\n    return Math.max(min, this.snap(container, { as: ratio }))\n  }\n\n  // Changes the base unit to the provided key by recalculating and replacing the unit map pairs.\n  // TODO: Test, and ensure that the base unit is equal to 1 (or, could just use scale)\n  rebase (unit = this.lens.unit) {\n    if (unit === this.lens.unit) return this\n\n    const map = Object.entries(this.map)\n      .reduce((map, [key, value]) => Object.assign(map, {\n        [key]: this.cast(value, { is: this.lens.is, as: unit })\n      }, { [unit]: 1 }));\n\n    this.map = map;\n    this.lens.unit = unit;\n\n    return this\n  }\n\n  clone (props) {\n    const map = Object.assign({}, this.map, props.map);\n    const lens = Object.assign({}, this.lens, props.lens);\n\n    return new Units({ map, lens })\n  }\n\n  static use (props) {\n    return new Units(props)\n  }\n}\n\nconst units = props => new Units(props);\n\nexport { Units, clamp, cyclic, gcd, invlerp, lerp, project, steps, units };\n//# sourceMappingURL=segu.esm.js.map\n","import { compile, compose } from './data'\nimport { gcd, clamp, lerp } from './math'\nimport { Units } from 'segu'\n\n/**\n * Provides essential duration values and calculations of a bach track.\n * Enables trivial conversions between any duration unit via cast (based\n * on milliseconds) and unitize (based on steps, bach's iteration unit).\n */\nexport class Durations extends Units {\n\n  constructor (source, lens) {\n    super({ map: null, lens })\n\n    this.source = source\n    this.data = compile(source)\n\n    this.init()\n  }\n\n  init () {\n    this.map = Durations.map(this.data)\n\n    this.lens.assign({ unit: 'step', max: this.total })\n  }\n\n  get units () {\n    return this.data.units\n  }\n\n  get steps () {\n    return this.data.steps\n  }\n\n  get bar () {\n    return this.units.bar\n  }\n\n  get metrics () {\n    return this.data.metrics\n  }\n\n  get min () {\n    return this.metrics.min\n  }\n\n  get max () {\n    return this.metrics.max\n  }\n\n  get total () {\n    return this.metrics.total\n  }\n\n  at (duration, is = 'step') {\n    const step = Math.floor(this.cast(duration, { is, as: 'step' }))\n    const index = this.cyclic(step)\n    const state = this.steps[index]\n    const [context, play, stop] = state || []\n\n    return {\n      beat: context[0],\n      elems: context.slice(1),\n      play,\n      stop,\n      index\n    }\n  }\n\n  metronize (duration, { is = 'ms', as = 'pulse' } = {}) {\n    const index = this.cast(duration, { is, as })\n    const bar = this.cast(this.bar.step, { as })\n\n    return Math.floor(index % bar)\n  }\n\n  // TODO: Either replace or improve via inspiration with this:\n  // @see: https://tonejs.github.io/docs/r13/Time#quantize\n  rhythmic (duration, {\n    is = 'ms',\n    units = ['8n', '4n'],\n    calc = 'floor',\n    size = 'min'\n  } = {}) {\n    const durations = units\n      .map(unit => {\n        const value = this.cast(duration, { is, as: unit })\n        const result = Math[calc](value)\n\n        return this.cast(result, { is: unit, as: is })\n      })\n      .sort((a, b) => Math.abs(duration - a) - Math.abs(duration - b))\n\n    return Math[size](...durations)\n  }\n\n  static map (source) {\n    const data = compose(source, false)\n    const { beat, step, pulse, time, bar } = data.units\n\n    return {\n      step: 1,\n      pulse: 1 / (beat.step / beat.pulse),\n      bar: bar.step,\n      ms: 1 / time.step,\n      second: (1 / time.step) * 1000,\n      's': step,\n      'p': pulse,\n      'm': bar.step,\n      '2n': bar.step / 2,\n      '4n': bar.step / 4,\n      '8n': bar.step / 8,\n      '16n': bar.step / 16,\n      '32n': bar.step / 32,\n      '64n': bar.step / 64,\n      '4up': bar.step - (bar.step / 4),\n      '8up': bar.step - (bar.step / 8),\n      '16up': bar.step - (bar.step / 16),\n      '32up': bar.step - (bar.step / 32),\n      '64up': bar.step - (bar.step / 64)\n    }\n  }\n\n}\n","import { elementize } from 'bach-cljs'\nimport { note as teoriaNote } from 'teoria'\n\nimport { compose } from './data'\nimport { Note } from './note'\n\n/**\n * Represents a single and unique playable element.\n * Uniqueness and equality are determined by `id`.\n */\nexport class Element {\n\n  constructor (data) {\n    this.data = data\n  }\n\n  get id () {\n    return `${this.data.kind}.${this.data.id}`\n  }\n\n  get uid () {\n    return Element.uid(this.id)\n  }\n\n  get value () {\n    return this.data.value\n  }\n\n  get props () {\n    return this.data.props || []\n  }\n\n  get kind () {\n    return this.data.kind.toLowerCase()\n  }\n\n  get duration () {\n    return this.data.duration\n  }\n\n  get notes () {\n    return Note.all(this.kind, this.value)\n  }\n\n  get musical () {\n    return MUSICAL_ELEMENTS.includes(this.kind)\n  }\n\n  static uid (id) {\n    return id.split('.').pop()\n  }\n\n}\n\n/**\n * Provides a centralized and shareable store of parsed elements in a bach track.\n */\nexport class Elements {\n\n  constructor ({ source, store, cast } = {}) {\n    this.source = compose(source)\n    this.cast = cast || (_ => _)\n    this.data = store || Elements.cast(this.source.elements, cast)\n  }\n\n  get all () {\n    return this.kinds.flatMap(kind => this.every(kind))\n  }\n\n  get kinds () {\n    return Object.keys(this.data)\n  }\n\n  get values () {\n    return this.all.map(elem => elem.value)\n  }\n\n  get ids () {\n    return this.all.map(elem => elem.id)\n  }\n\n  get (id) {\n    const parts = typeof id === 'string' ? id.split('.') : []\n\n    if (parts.length === 2) {\n      const [kind, uid] = parts\n      const elem = this.data[kind][uid]\n\n      return elem ? { ...elem, id: uid, kind } : null\n    }\n\n    throw TypeError('Element id must be a string in the format of \"kind.hash\"')\n  }\n\n  one (kind) {\n    return this.every(kind)[0]\n  }\n\n  every (kind) {\n    return Object.values(this.data[kind]).map(elem => new Element(elem))\n  }\n\n  resolve (elem) {\n    // FIXME: Use json-schema validator here instead to support cross-context typing.\n    // if (elem instanceof Element) return elem\n    if (typeof elem === 'object') return elem\n    if (typeof elem === 'string') return this.get(elem)\n    if (Array.isArray(elem)) return elem.map(el => this.get(el))\n    if (elem == null) return null\n\n    throw TypeError('Failed to resolve element due to unsupported data type')\n  }\n\n  // TODO: Rename to `insert`\n  register ({ kind, value, props }) {\n    if (!kind || typeof kind !== 'string') throw TypeError('kind must be a non-empty string')\n    if (value == null) throw TypeError('value must be defined and non-null')\n\n    const elem = elementize(kind, [value, ...props])\n    const uid = Element.uid(elem.id)\n    const record = this.cast({ ...elem, id: uid, kind })\n\n    this.data[kind] = this.data[kind] || {}\n    this.data[kind][uid] = record\n\n    this.source.elements = this.data\n\n    return new Element(record)\n  }\n\n  static cast (elements, as = _ => _) {\n    if (!elements) return null\n\n    // TODO: Validate element shape with JSON Schema\n    return Object.entries(elements)\n      .reduce((acc, [kind, ids]) => {\n        const elems = Object.entries(ids)\n          .reduce((acc, [id, elem]) => ({\n            ...acc,\n            [id]: as({ id, kind, ...elem })\n          }), {})\n\n        return { ...acc, [kind]: elems }\n      }, {})\n  }\n\n}\n\n// TODO: Hoist out to Music, leaky abstraction\nexport const MUSICAL_ELEMENTS = ['note', 'chord', 'scale', ' penta'] // triad\n","import { Element } from './elements'\nimport { Note } from './note'\n\n/**\n * Represents a single beat in a track.\n *\n * Beats are represented as a tuple and may contain multiple elements\n *\n * duration -> items -> elements\n */\nexport class Beat {\n\n  constructor (data, store) {\n    this.data = data\n    this.store = store\n  }\n\n  get id () {\n    return this.data.id\n  }\n\n  get index () {\n    return this.data.index\n  }\n\n  get duration () {\n    return this.data.duration\n  }\n\n  get items () {\n    return this.data.items.map(item => ({\n      ...item,\n      elements: item.elements.map(elem => this.store.resolve(elem))\n    }))\n  }\n\n  get elements () {\n    return this.data.items.flatMap(({ elements }) =>\n      elements.map(elem => this.store.resolve(elem))\n    )\n  }\n\n  get kinds () {\n    return this.all(({ kind }) => kind)\n  }\n\n  get values () {\n    return this.all(({ value }) => value)\n  }\n\n  get notes () {\n    return this.notesOf(this.elements)\n  }\n\n  // Provides map of elements in a beat grouped by kind.\n  // WARN: Doesn't support multiple elements of the same kind.\n  get parts () {\n    return this.elements.reduce((parts, elem) => ({\n     ...parts,\n      [elem.kind]: elem\n    }), {})\n  }\n\n  get musical () {\n    return this.elements.every(elem => elem.musical)\n  }\n\n  all (cast = _ => _) {\n    return [...new Set(this.elements.map(cast))]\n  }\n\n  find (kind) {\n    return this.elements.find(elem => kind === elem.kind)\n  }\n\n  filter (kind) {\n    return this.elements.filter(elem => kind === elem.kind)\n  }\n\n  last (kind) {\n    return this.filter(kind).reverse()[0]\n  }\n\n  either (kinds) {\n    return kinds.reduce((acc, kind) => acc.length ? acc : this.filter(kind), [])\n  }\n\n  notesOf (elements) {\n    return Note.unite(elements.flatMap(({ notes }) => notes))\n  }\n\n  static from (beats, store) {\n    if (Array.isArray(beats)) {\n      return beats.map(beat => new Beat(beat, store))\n    }\n\n    return [new Beat(beats, store)]\n  }\n\n}\n","import { Note } from './note'\nimport { Durations } from './durations'\nimport { Element, Elements, MUSICAL_ELEMENTS } from './elements'\nimport { Beat } from './beats'\nimport { compile, notesIn } from './data'\n\nexport class Music {\n\n  constructor (source) {\n    this.assign(source)\n  }\n\n  init () {\n    if (!this.parses) return null\n\n    this.store = new Elements({\n      source: this.data,\n      cast: elem => ({\n        ...elem,\n        notes: Note.all(elem.kind, elem.value)\n      })\n    })\n\n    this.beats = Beat.from(this.data.beats, this.store)\n    this.durations = new Durations(this.data)\n  }\n\n  assign (source) {\n    this.source = source\n    this.data = compile(source)\n\n    this.init()\n\n    return this\n  }\n\n  get headers () {\n    return this.data.headers\n  }\n\n  get metrics () {\n    return this.data.metrics\n  }\n\n  get units () {\n    return this.data.units\n  }\n\n  get meter () {\n    return this.headers.meter\n  }\n\n  get tempo () {\n    return this.headers.tempo\n  }\n\n  get elements () {\n    return this.store.all\n  }\n\n  get notes () {\n    return Note.unite(\n      this.beats.flatMap(beat =>\n        beat.elements.flatMap(({ notes }) => notes)\n      )\n    )\n  }\n\n  get musical () {\n    return this.beats.every(beat => beat.musical)\n  }\n\n  get step () {\n    return this.units.beat.step\n  }\n\n  get interval () {\n    return this.units.time.step\n  }\n\n  get parses () {\n    return !this.data.fail\n  }\n\n  at (duration, is = 'step') {\n    const cursor = this.durations.at(duration, is)\n\n    return {\n      beat: this.beats[cursor.beat],\n      elems: this.store.resolve(cursor.elems),\n      play: this.store.resolve(cursor.play),\n      stop: this.store.resolve(cursor.stop)\n    }\n  }\n\n  beat (index) {\n    const cursor = this.durations.cyclic(index, { max: this.beats.length })\n\n    return this.beats[cursor]\n  }\n\n}\n"],"names":["Object","defineProperty","exports","value","regexpCode","getEsmExportName","getProperty","safeStringify","stringify","addCodeArg","str","_","nil","Name","IDENTIFIER","_CodeOrName","_createClass","_classCallCheck","_CodeOrName2","_inherits","_super","_createSuper","s","_this","call","test","Error","key","toString","emptyStr","get","_defineProperty","_Code","_CodeOrName3","_super2","code","_this2","_items","length","item","_a","_str","reduce","c","concat","_names","names","strs","i","_len2","arguments","args","Array","_key2","push","plus","expr","_len3","_key3","optimize","arg","apply","_toConsumableArray","interpolate","res","mergeExprItems","undefined","splice","a","b","slice","strConcat","c1","c2","_templateObject","_taggedTemplateLiteral","x","isArray","join","JSON","replace","_templateObject2","rx","ValueScope","Scope","varKinds","UsedValueState","ValueError","_Error","_super3","name","_this3","_wrapNativeSuper","code_1","_ref2","prefixes","parent","_prefixes","_parent","toName","nameOrPrefix","prefix","_newName","ng","_nameGroup","index","_b","has","ValueScopeName","_code$1$Name","_super4","nameStr","_this4","setValue","_ref3","property","itemIndex","scopePath","_templateObject3","line","_templateObject4","_Scope","_super5","opts","_this5","_values","_scope","scope","_objectSpread","_n","lines","ref","valueKey","vs","_name","Map","set","getValue","keyOrRef","scopeRefs","scopeName","values","_reduceValues","_templateObject5","scopeCode","usedValues","getCode","valueCode","_this6","_loop","nameSet","forEach","Started","def","es5","_templateObject6","_templateObject7","Completed","_ret","or","not","CodeGen","code_2","enumerable","scope_2","scope_1","operators","GT","GTE","LT","LTE","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","_Node","_super6","varKind","rhs","_this7","render","_ref4","constants","optimizeExpr","Assign","_Node2","_super7","lhs","sideEffects","_this8","_ref5","addExprNames","AssignOp","_Assign","_super8","op","_this9","_ref6","Label","_Node3","_super9","label","_this10","_ref7","Break","_Node4","_super10","_this11","_ref8","Throw","_Node5","_super11","error","_this12","_ref9","AnyCode","_Node6","_super12","_this13","_ref10","ParentNode","_Node7","_super13","_this14","nodes","n","subtractNames","addNames","BlockNode","_ParentNode","_super14","_get","_getPrototypeOf","prototype","Root","_ParentNode2","_super15","Else","_BlockNode","_super16","kind","If","_BlockNode2","_super17","condition","_this15","cond","e","ns","For","_BlockNode3","_super18","ForLoop","_For","_super19","iteration","_this16","ForRange","_For2","_super20","from","to","_this17","ForIter","_For3","_super21","loop","iterable","_this18","Func","_BlockNode4","_super22","async","_this19","_async","Return","_ParentNode3","_super23","Try","_BlockNode5","_super24","Catch","_BlockNode6","_super25","_this20","Finally","_BlockNode7","_super26","extScope","_blockStarts","_extScope","_nodes","_root","scopeValue","prefixOrName","Set","add","getScopeValue","_def","constant","_leafNode","_const","_constant","_let","_var","assign","object","_len4","keyValues","_key4","_i2","_keyValues","_keyValues$_i","_slicedToArray","_if","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_else","_endBlockNode","_for","node","forBody","endFor","forRange","forOf","_this21","arr","_templateObject8","_templateObject9","forIn","obj","ownProperties","_templateObject10","_break","_return","_try","tryBody","catchCode","finallyCode","_currNode","_throw","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","replaceName","canOptimize","items","some","_templateObject11","par","andCode","mappend","and","_len5","_key5","orCode","_len6","_key6","y","_templateObject12","_templateObject13","checkStrictMode","Type","useFunc","evaluatedPropsToName","mergeEvaluated","unescapeJsonPointer","escapeJsonPointer","unescapeFragment","schemaRefOrVal","schemaHasRules","checkUnknownRules","toHash","hash","_iterator4","_createForOfIteratorHelper","_step4","done","err","f","alwaysValidSchema","it","schema","keys","self","RULES","all","strictSchema","rules","keywords","schemaHasRulesButRef","_ref11","keyword","$data","topSchemaRef","schemaPath","codegen_1","_templateObject14","_templateObject15","decodeURIComponent","escapeFragment","encodeURIComponent","eachItem","xs","_iterator5","_step5","makeMergeEvaluated","_ref12","mergeNames","mergeToName","mergeValues","resultToName","gen","props","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","setEvaluated","_templateObject22","_templateObject23","_templateObject24","_templateObject25","Math","max","ps","_templateObject26","p","_templateObject27","snippets","getErrorPath","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","_templateObject28","_templateObject29","_templateObject30","_templateObject31","msg","mode","logger","warn","data","valCxt","instancePath","parentData","parentDataProperty","rootData","dynamicAnchors","vErrors","errors","json","jsonPos","jsonLen","jsonPart","_default","extendErrors","reportExtraError","reportError","keywordError","message","_ref13","_templateObject32","keyword$DataError","_ref14","schemaType","_templateObject33","_templateObject34","cxt","errorPaths","overrideAllErrors","compositeRule","allErrors","errObj","errorObjectCode","addError","returnErrors","_templateObject35","names_1","resetErrorsCount","errsCount","_templateObject36","_templateObject37","_ref15","schemaValue","_templateObject38","_templateObject39","_templateObject40","errorPath","_templateObject41","_templateObject42","errSchemaPath","verbose","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","errs","validateName","schemaEnv","$async","_templateObject49","ValidationError","_templateObject50","E","params","propertyName","parentSchema","createErrors","_templateObject51","errorObject","errorInstancePath","errorSchemaPath","extraErrorProps","_ref16","_ref17","instPath","_templateObject52","util_1","Str","_ref18","_ref19","schPath","_templateObject53","_templateObject54","_ref20","_templateObject55","messages","_templateObject56","boolOrEmptySchema","topBoolOrEmptySchema","boolError","falseSchemaError","_typeof","_templateObject57","valid","schemaCode","errors_1","getRules","isJSONType","_jsonTypes","jsonTypes","groups","number","type","string","array","types","integer","post","shouldUseRule","shouldUseGroup","schemaHasRulesForType","_ref21","group","rule","definition","kwd","reportTypeError","checkDataTypes","coerceAndCheckDataType","getJSONTypes","DataType","getSchemaTypes","hasNull","includes","nullable","ts","every","rules_1","coerceTo","coerceToTypes","coerceTypes","checkTypes","applicability_1","wrongType","strictNumbers","Wrong","coerceData","COERCIBLE","filter","t","dataType","_templateObject58","coerced","_templateObject59","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_iterator6","_step6","coerceSpecificType","_templateObject64","assignParentData","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","_templateObject70","_templateObject71","_templateObject72","_templateObject73","_templateObject74","_templateObject75","_templateObject76","_templateObject77","_ref22","_templateObject78","_templateObject79","checkDataType","strictNums","correct","Correct","_templateObject80","_templateObject81","_templateObject82","numCond","_templateObject83","_templateObject84","_cond","_templateObject85","_templateObject86","dataTypes","notObj","_templateObject87","_templateObject88","typeError","_ref23","_ref24","_templateObject89","_templateObject90","getTypeErrorContext","assignDefaults","ty","_it$schema","properties","assignDefault","sch","prop","defaultValue","childData","_templateObject91","_templateObject92","useDefaults","_templateObject93","_templateObject94","validateUnion","validateArray","usePattern","callValidateCode","schemaProperties","noPropertyInData","propertyInData","isOwnProperty","hasPropFunc","reportMissingProp","checkMissingProp","checkReportMissingProp","util_2","setParams","missingProperty","_templateObject95","_ref25","missing","map","_templateObject96","hasOwnProperty","_templateObject97","_templateObject98","_templateObject99","_templateObject100","_templateObject101","allSchemaProperties","schemaMap","_ref26","context","passSchema","_ref26$it","dataAndSchema","_templateObject102","dynamicRef","_templateObject103","_templateObject104","_templateObject105","newRegExp","_templateObject106","_ref27","pattern","u","unicodeRegExp","regExp","_templateObject107","validArr","validateItems","notValid","_templateObject108","subschema","alwaysValid","unevaluated","schValid","_sch","schCxt","schemaProp","_templateObject109","merged","mergeValidEvaluated","result","reset","validateKeywordUsage","validSchemaType","funcKeywordCode","macroKeywordCode","macroSchema","macro","schemaRef","useKeyword","validateSchema","pass","checkAsyncKeyword","validate","compile","validateRef","block$data","validateKeyword","ok","assignValid","modifying","modifyData","reportErrs","ruleErrs","validateAsync","validateSync","addErrs","_templateObject110","_templateObject111","_templateObject112","validateErrs","_templateObject113","_await","_templateObject114","passCxt","passContext","_templateObject115","_templateObject116","_templateObject117","_templateObject118","_templateObject119","_ref28","allowUndefined","st","_ref29","deps","dependencies","errorsText","extendSubschemaMode","extendSubschemaData","getSubschema","_ref30","_templateObject120","_templateObject121","_ref31","dpType","dataPathArr","nextData","_templateObject122","dataContextProps","_templateObject123","_templateObject124","_nextData","dataLevel","definedProperties","dataNames","_ref32","jtdDiscriminator","jtdMetadata","fastDeepEqual","equal","constructor","RegExp","source","flags","valueOf","traverse","module","cb","pre","_traverse","additionalItems","contains","additionalProperties","propertyNames","then","arrayKeywords","allOf","anyOf","oneOf","propsKeywords","$defs","definitions","patternProperties","skipKeywords","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","keyIndex","escapeJsonPtr","allKeys","getSchemaRefs","normalizeId","_getFullPath","inlineRef","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","getFullPath","resolver","id","normalize","parse","serialized","serialize","split","TRAILING_SLASH_HASH","resolveUrl","baseId","resolve","ANCHOR","_this22","_this$opts","schemaId","uriResolver","schId","baseIds","pathPrefix","localRefs","schemaRefs","fullPath","addRef","addAnchor","$anchor","$dynamicAnchor","_resolve","ambiguos","schOrRef","refs","checkAmbiguosRef","anchor","sch1","sch2","getData","KeywordCxt","validateFunctionCode","dataType_2","dataType_1","isSchemaObj","checkKeywords","schemaCxtHasRules","topSchemaObjCode","validateFunction","boolSchema_1","_ref33","_templateObject125","_templateObject126","funcSourceUrl","destructureValCxtES5","_templateObject127","destructureValCxt","_templateObject128","_templateObject129","_templateObject130","_templateObject131","_templateObject132","_templateObject133","_templateObject134","_templateObject135","_templateObject136","_templateObject137","_templateObject138","$comment","commentKeyword","checkNoDefault","resetEvaluated","typeAndKeywords","returnResults","evaluated","_templateObject139","_templateObject140","_templateObject141","_templateObject142","_templateObject143","_templateObject144","_templateObject145","process","_templateObject146","subschemaCode","subSchemaObjCode","_ref34","updateContext","checkAsyncSchema","_templateObject147","checkRefsAndKeywords","jtd","schemaKeywords","checkedTypes","$ref","ignoreKeywordsWithRef","resolve_1","_ref35","_templateObject148","_templateObject149","rootName","root","_templateObject150","_templateObject151","_templateObject152","_templateObject153","assignEvaluated","_templateObject154","_ref36","_templateObject155","_templateObject156","typeErrors","keywordCode","checkStrictTypes","_iterator7","_step7","groupKeywords","iterateKeywords","_templateObject157","defaults_1","_iterator8","_step8","meta","strictTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","checkKeywordTypes","includesType","strictTypesError","narrowSchemaTypes","hasApplicableType","schTs","kwdT","withTypes","_iterator9","_step9","keyword_1","trackErrors","successAction","failAction","failResult","fail","fail$data","_templateObject158","invalid$data","append","errorParams","_error","$dataError","codeBlock","_this23","$dataValid","check$data","_templateObject159","wrong$DataType","invalid$DataSchema","_templateObject160","validateSchemaRef","_templateObject161","appl","subschema_1","nextContext","schemaCxt","_this24","ruleType","JSON_POINTER","RELATIVE_JSON_POINTER","_ref37","jsonPointer","matches","exec","up","errorMsg","segments","_iterator10","_step10","segment","_templateObject162","_templateObject163","pointerType","_Error2","_super27","_this25","ajv","validation","MissingRefError","_Error3","_super28","_this26","missingRef","missingSchema","resolveSchema","resolveRef","compileSchema","SchemaEnv","env","getCompilingSchema","rootId","_this$opts$code","_ValidationError","validation_error_1","_templateObject164","_templateObject165","sourceCode","_compilations","validate_1","validateCode","makeValidate","Function","scopeValues","dynamicProps","dynamicItems","schOrFunc","inlineOrCompile","inlineRefs","schEnv","_iterator11","_step11","sameSchemaEnv","s1","s2","resolve$1","schemas","refPath","getJsonPointer","PREVENT_SCOPE_CHANGE","parsedRef","_ref38","fragment","_iterator12","_step12","part","partSchema","global","factory","this","merge","_len","sets","_key","xl","subexp","typeOf","o","shift","toLowerCase","toUpperCase","toArray","setInterval","target","buildExps","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","PCT_ENCODED$","GEN_DELIMS$$","SUB_DELIMS$$","RESERVED$$","UCSCHAR$$","IPRIVATE$$","UNRESERVED$$","DEC_OCTET_RELAXED$","IPV4ADDRESS$","H16$","LS32$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","IPV6ADDRESS$","ZONEID$","PCHAR$","NOT_SCHEME","NOT_USERINFO","NOT_HOST","NOT_PATH","NOT_PATH_NOSCHEME","NOT_QUERY","NOT_FRAGMENT","ESCAPE","UNRESERVED","OTHER_CHARS","PCT_ENCODED","IPV4ADDRESS","IPV6ADDRESS","URI_PROTOCOL","IRI_PROTOCOL","slicedToArray","sliceIterator","_arr","_d","_e","_i","Symbol","iterator","_s","next","TypeError","toConsumableArray","arr2","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","String","fromCharCode","error$1","RangeError","fn","mapDomain","parts","labels","encoded","ucs2decode","output","counter","charCodeAt","extra","ucs2encode","fromCodePoint","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","bias","basic","lastIndexOf","j","oldi","w","baseMinusT","out","encode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_currentValue2","basicLength","handledCPCount","m","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","currentValue","handledCPCountPlusOne","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_currentValue","q","qMinusT","toUnicode","toASCII","punycode","SCHEMES","pctEncChar","chr","pctDecChars","newStr","il","parseInt","substr","_c","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","scheme","userinfo","host","path","query","_stripLeadingZeros","_normalizeIPv4","_matches","address","_normalizeIPv6","_matches2","zone","_address$toLowerCase$","reverse","_address$toLowerCase$2","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","acc","field","lastLongest","longestZeroFields","sort","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","options","iri","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","authority","charAt","absolutePath","resolveComponents","relative","skipNormalization","tolerant","baseURI","relativeURI","schemelessOptions","uri","uriA","uriB","escapeComponent","unescapeComponent","handler","secure","handler$1","isSecure","wsComponents","handler$2","resourceName","_wsComponents$resourc","_wsComponents$resourc2","handler$3","O","ATEXT$$","QTEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","handler$4","parse$$1","mailtoComponents","unknownHeaders","headers","hfields","hfield","toAddrs","_x","_xl","subject","_x2","_xl2","addr","serialize$$1","toAddr","atIdx","localPart","domain","URN_PARSE","handler$5","urnComponents","nid","nss","urnScheme","uriComponents","UUID","handler$6","uuidComponents","uuid","codegen_2","defaultRegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","MAX_EXPRESSION","requiredOptions","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_t","_u","_v","_w","_y","_z","_0","strict","_optz","uri_1","strictTuples","strictRequired","loopRequired","loopEnum","addUsedSchema","validateFormats","int32range","Ajv","formats","_loading","_cache","_this$opts$code2","getLogger","formatOpt","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","_addVocabularies","_addDefaultMetaSchema","addInitialKeywords","addMetaSchema","addInitialSchemas","addKeyword","_this$opts2","_dataRefSchema","$dataRefSchema","$id","defaultMeta","_this$opts3","schemaKeyRef","v","getSchema","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_x3","_x4","_runCompileAsync","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_schema","wrap","_callee$","_context","prev","loadMetaSchema","$schema","abrupt","_compileAsync","stop","_x5","_loadMetaSchema","_callee2","_callee2$","_context2","_x6","_compileAsync2","_callee3","_callee3$","_context3","t0","ref_error_1","checkLoaded","loadMissingSchema","_ref39","_x7","_loadMissingSchema","_callee4","_callee4$","_context4","_loadSchema","sent","addSchema","_x8","_loadSchema2","_callee5","_callee5$","_context5","finish","_validateSchema","_iterator13","_step13","_checkUnique","throwOrLogError","keyRef","getSchEnv","compile_1","removeSchema","_removeAllSchemas","clear","cacheKey","addVocabulary","_iterator14","_step14","kwdOrDef","_this27","checkKeyword","addRule","keywordMetaschema","getKeyword","removeKeyword","_iterator15","_step15","findIndex","addFormat","_ref40","_ref40$separator","separator","_ref40$dataVar","dataVar","text","$dataMetaSchema","metaSchema","keywordsJsonPointers","_iterator16","_step16","_iterator17","_step17","seg","schemaOrData","regex","startsWith","_compileMetaSchema","currentOpts","checkOpts","log","opt","optsSchemas","defs","metaOpts","_iterator18","_step18","noLogs","console","KEYWORD_NAME","_this28","ruleGroup","find","_ref41","before","addBeforeRule","_rule","$dataRef","callRef","getValidate","callRootRef","schOrEnv","callValidate","inlineRefSchema","_templateObject166","schName","_templateObject167","callAsyncRef","callSyncRef","_templateObject168","addEvaluatedFrom","_templateObject169","addErrorsFrom","_templateObject170","_templateObject171","_templateObject172","schEvaluated","_templateObject173","_templateObject174","core","id_1","ref_1","ops","KWDs","okStr","_ref42","_templateObject175","_ref43","_templateObject176","_templateObject177","_ref44","_templateObject178","_ref45","_templateObject179","prec","multipleOfPrecision","invalid","_templateObject180","_templateObject181","_templateObject182","ucs2length","pos","_ref46","comp","_templateObject183","_ref47","_templateObject184","_templateObject185","_templateObject186","ucs2length_1","_templateObject187","_ref48","_templateObject188","_ref49","_templateObject189","_templateObject190","_templateObject191","_ref50","_templateObject192","_ref51","_templateObject193","_templateObject194","_ref52","_templateObject195","_ref53","_templateObject196","useLoop","allErrorsMode","exitOnErrorMode","_iterator19","_step19","requiredKey","loopAllRequired","_iterator20","_step20","loopUntilMissing","_ref54","_templateObject197","_ref55","_templateObject198","_templateObject199","_ref56","_ref56$params","_templateObject200","_ref57","_ref57$params","_templateObject201","itemTypes","validateUniqueItems","_templateObject202","_templateObject203","_templateObject204","loopN","loopN2","indices","_templateObject205","_templateObject206","_templateObject207","_templateObject208","_templateObject209","_templateObject210","_templateObject211","_templateObject212","_templateObject213","eql","equal_1","outer","_templateObject214","_templateObject215","_templateObject216","_ref58","_templateObject217","_templateObject218","_templateObject219","_ref59","_templateObject220","getEql","vSchema","equalCode","_templateObject221","_templateObject222","_templateObject223","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","validateAdditionalItems","_ref60","_templateObject224","_ref61","_templateObject225","_templateObject226","_templateObject227","_templateObject228","validateTuple","extraItems","schArr","checkStrictTuple","_templateObject229","_templateObject230","l","fullTuple","items_1","_ref62","_templateObject231","_ref63","_templateObject232","prefixItems","additionalItems_1","_ref64","_ref64$params","min","_templateObject233","_templateObject234","_ref65","_ref65$params","_templateObject235","_templateObject236","minContains","maxContains","_templateObject237","_templateObject238","_templateObject239","_templateObject240","validateItemsWithCount","checkLimits","_valid","_templateObject241","_templateObject242","_templateObject243","_templateObject244","validateSchemaDeps","validatePropertyDeps","_ref66","_ref66$params","depsCount","property_ies","_templateObject245","_ref67","_ref67$params","_templateObject246","_splitDependencies","splitDependencies","_splitDependencies2","propDeps","schDeps","_ref68","propertyDeps","schemaDeps","_loop2","hasProperty","_iterator21","_step21","depProp","_templateObject247","_ret2","_loop3","_ret3","_ref69","_templateObject248","_ref70","_templateObject249","additionalProperty","removeAdditional","patProps","checkAdditionalProperties","_templateObject250","additionalPropertyCode","isAdditional","definedProp","propsSchema","_templateObject251","_templateObject252","deleteAdditional","_templateObject253","applyAdditionalSchema","additionalProperties_1","allProps","_iterator22","_step22","_iterator23","_step23","hasDefault","applyPropertySchema","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","validatePatternProperties","_iterator24","_step24","pat","checkMatchingProperties","validateProperties","_templateObject254","_templateObject255","_ref71","_templateObject256","passing","discriminator","validateOneOf","_templateObject257","_templateObject258","_ref72","_templateObject259","ifClause","_ref73","_templateObject260","hasThen","hasSchema","hasElse","validateIf","validateClause","_templateObject261","_ref74","getApplicator","draft2020","applicator","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","propertyNames_1","dependencies_1","properties_1","patternProperties_1","prefixItems_1","items2020_1","contains_1","_ref75","_templateObject262","_ref76","_templateObject263","validate$DataFormat","validateFormat","fmts","fDef","_templateObject264","fType","_templateObject265","_templateObject266","_templateObject267","_templateObject268","unknownFmt","invalidFmt","_templateObject269","callFormat","_templateObject270","_templateObject271","validData","_templateObject272","_templateObject273","formatDef","unknownFormat","_getFormat","getFormat","_getFormat2","fmtType","fmtRef","validCondition","unknownMsg","fmtDef","_templateObject274","fmt","_templateObject275","_templateObject276","_templateObject277","_templateObject278","format_1","contentVocabulary","metadataVocabulary","draft7Vocabularies","core_1","validation_1","applicator_1","metadata_1","DiscrError","_ref77","_ref77$params","discrError","tagName","types_1","Tag","_ref78","_ref78$params","tag","_templateObject279","mapping","_templateObject280","_templateObject281","validateMapping","getMapping","tagValue","_templateObject282","applyTagSchema","Mapping","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","_ref79","addMapping","_iterator25","_step25","META_SUPPORT_DATA","META_SCHEMA_ID","_core$1$default","_super29","_this29","draft7_1","discriminator_1","draft7MetaSchema","_exports","bach","pretty","compose","upgraded","scaleify","_value$split","_value$split2","tonic","teoriaScale","chordify","teoriaChord","scaleToString","scale","notesInChord","notes","note","Note","notesInScale","notesIn","notesOf","chord","penta","notesIntersect","left","right","teoriaNote","TeoriaNote","chroma","pitchOf","scientific","valuesOf","generalize","unite","other","equals","gcd","gcd$1","clamp","clamp$1","lerp","lerp$1","ratio","invlerp","invlerp$1","steps","Lens","_ref80","_ref80$unit","unit","_ref80$is","is","_ref80$as","as","_ref80$min","_ref80$max","_ref80$grid","grid","_ref80$origin","origin","Number","MAX_SAFE_INTEGER","use","cyclic","Units","_ref81","_ref81$map","_ref81$lens","lens","_this$lens$use","cast","head","tail","_ref82","_ref82$is","_ref82$as","snap","_this$scope","calc","_this$scope2","_this$scope3","_this$scope4","_this$scope5","_this$scope6","range","_this$scope7","progress","fold","basis","size","container","rebase","_this30","entries","_ref83","_ref84","clone","Durations","_Units","_super30","_this31","init","total","units","bar","metrics","at","duration","step","state","_ref85","_ref86","play","beat","elems","metronize","_ref87","_ref87$is","_ref87$as","rhythmic","_this32","_ref88","_ref88$is","_ref88$units","_ref88$calc","_ref88$size","durations","abs","_data$units","pulse","time","ms","second","Element","uid","MUSICAL_ELEMENTS","Elements","_ref89","store","elements","_this33","kinds","flatMap","elem","_parts","one","_this34","el","register","_ref90","elementize","record","_ref91","_ref92","ids","_ref93","_ref94","Beat","_this35","_this36","_ref95","_ref96","_ref97","musical","either","_this37","_ref98","beats","Music","parses","meter","tempo","_ref99","cursor"],"mappings":"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"}